<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>郑君的学习笔记</title>
  <icon>https://www.gravatar.com/avatar/ef05bab8bfc24f2437b6f3e9aee9af49</icon>
  <subtitle>要比昨天进步一点点</subtitle>
  <link href="http://zhengjun.top/atom.xml" rel="self"/>
  
  <link href="http://zhengjun.top/"/>
  <updated>2018-09-11T09:59:30.000Z</updated>
  <id>http://zhengjun.top/</id>
  
  <author>
    <name>郑  君</name>
    <email>aslucky1977@gmail.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用lldb调试bitcoin</title>
    <link href="http://zhengjun.top/2021/12/11/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%8C%BA%E5%9D%97%E9%93%BE/bitcoin/%E4%BD%BF%E7%94%A8lldb%E8%B0%83%E8%AF%95bitcoin/"/>
    <id>http://zhengjun.top/2021/12/11/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%8C%BA%E5%9D%97%E9%93%BE/bitcoin/%E4%BD%BF%E7%94%A8lldb%E8%B0%83%E8%AF%95bitcoin/</id>
    <published>2021-12-11T12:59:46.900Z</published>
    <updated>2018-09-11T09:59:30.000Z</updated>
    
    <content type="html"><![CDATA[<p>ubuntu 16.04 安装 LLDB</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get install LLDB</span><br></pre></td></tr></table></figure><p>如果提示缺少 six 包，需要使用 python 安装一下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// install pip</span><br><span class="line">curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py</span><br><span class="line">python get-pip.py</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip install six</span><br></pre></td></tr></table></figure><p>注意 docker 里面使用的时候，需要使用 –privileged 参数创建容器</p><h2 id="config-file-默认配置文件"><a href="#config-file-默认配置文件" class="headerlink" title="config file 默认配置文件"></a>config file 默认配置文件</h2><p>放入喜欢的命令，会在启动的时候执行</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">~/.lldbinit</span><br><span class="line">type format add --format hex int</span><br><span class="line">type format add --format hex &quot;char&quot;</span><br><span class="line">type format add --format hex &quot;unsigned char&quot;</span><br><span class="line">set set stop-line-count-before 20</span><br><span class="line">set set stop-line-count-after 15</span><br><span class="line">settings set target.max-string-summary-length 16384</span><br><span class="line">command alias brpos breakpoint set -f %1 -l %2</span><br><span class="line">settings set target.process.thread.step-in-avoid-nodebug false</span><br><span class="line">settings set target.skip-prologue false</span><br><span class="line">settings set target.x86-disassembly-flavor intel</span><br><span class="line">settings set stop-disassembly-count 8</span><br></pre></td></tr></table></figure><h2 id="lldb-使用样例"><a href="#lldb-使用样例" class="headerlink" title="lldb 使用样例"></a>lldb 使用样例</h2><p>命令格式：<br><noun>命令、<verb>命令操作、options命令选项、argument参数。命令各个元素之间用空格隔开，如果参数之中有空格则需要加上双引号。如果参数中带有反斜杠和双引号，则需要在其前面加上反斜杠。</verb></noun></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;noun&gt; &lt;verb&gt; [-options [option-value]] [argument [argument...]]</span><br></pre></td></tr></table></figure><p>options命令选项可以放在命令行的任何地方，但是如果argument参数以“-”开头，那么必须在option后面添加“–”结束标志进行区分，从而确定option的正确位置。例如你想启动一程序，“process launch”命令的option为“–stop-at-entry”，同时希望命令的argument为“-program_arg value”，你应该输入的命令为：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(lldb) process launch --stop-at-entry -- -program_arg value</span><br></pre></td></tr></table></figure><span id="more"></span><h3 id="macos-使用-lldb-调试-bitoin"><a href="#macos-使用-lldb-调试-bitoin" class="headerlink" title="macos 使用 lldb 调试 bitoin"></a>macos 使用 lldb 调试 bitoin</h3><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 如果有下面的错误提示</span></span><br><span class="line">ImportError: cannot <span class="keyword">import</span> name _remove_dead_weakref</span><br><span class="line"><span class="comment">// 切回系统自带python</span></span><br><span class="line">export PATH=/usr/bin:$PATH</span><br></pre></td></tr></table></figure><h3 id="获取帮助"><a href="#获取帮助" class="headerlink" title="获取帮助"></a>获取帮助</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">lldb -h</span><br></pre></td></tr></table></figure><h3 id="载入程序"><a href="#载入程序" class="headerlink" title="载入程序"></a>载入程序</h3><p>启动时载入</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">lldb ./src/primecoind</span><br></pre></td></tr></table></figure><p>动态栽入</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ lldb</span><br><span class="line">(lldb) file /Projects/Sketch/build/Debug/Sketch.app</span><br></pre></td></tr></table></figure><h3 id="运行前设置环境变量"><a href="#运行前设置环境变量" class="headerlink" title="运行前设置环境变量"></a>运行前设置环境变量</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(lldb) settings set target.env-vars DEBUG=1</span><br><span class="line">(lldb) set se target.env-vars DEBUG=1</span><br><span class="line">(lldb) env DEBUG=1</span><br></pre></td></tr></table></figure><h3 id="设置断点"><a href="#设置断点" class="headerlink" title="设置断点"></a>设置断点</h3><p>函数名 foo</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(lldb) breakpoint set -n foo</span><br><span class="line">breakpoint 简写 br</span><br><span class="line"></span><br><span class="line">// 可以一次指定多个函数</span><br><span class="line">(lldb) br set --name foo --name bar</span><br></pre></td></tr></table></figure><p>文件 foo.c 行数 12</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(lldb) br set -f foo.c -l 12</span><br></pre></td></tr></table></figure><p>条件断点</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(lldb) breakpoint set --name foo --condition &#x27;(int)strcmp(y,&quot;hello&quot;) == 0&#x27;</span><br><span class="line">(lldb) br s -n foo -c &#x27;(int)strcmp(y,&quot;hello&quot;) == 0&#x27;</span><br></pre></td></tr></table></figure><p>查看断点信息</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(lldb) br list</span><br><span class="line">(lldb) br l</span><br></pre></td></tr></table></figure><p>禁用断点</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 禁用断点</span><br><span class="line"># 根据上面查看断点列表的时候的序号来操作断点</span><br><span class="line">(lldb) breakpoint disable 2</span><br></pre></td></tr></table></figure><p>启用断点</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(lldb) breakpoint enable 2</span><br></pre></td></tr></table></figure><p>删除断点</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(lldb) br del 1</span><br></pre></td></tr></table></figure><p>执行到指定行数</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">thread until linenum</span><br></pre></td></tr></table></figure><h3 id="运行程序"><a href="#运行程序" class="headerlink" title="运行程序"></a>运行程序</h3><p>下面的命令都是一样的</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(lldb) process launch</span><br><span class="line">(lldb) run</span><br><span class="line">(lldb) r</span><br></pre></td></tr></table></figure><p>运行时设置环境变量</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(lldb) r -v DEBUG=1</span><br></pre></td></tr></table></figure><h4 id="指定参数运行"><a href="#指定参数运行" class="headerlink" title="指定参数运行"></a>指定参数运行</h4><p>例如你想启动一程序，“process launch”命令的option为“–stop-at-entry”，同时希望命令的argument为“-program_arg value”，你应该输入的命令为：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(lldb) process launch --stop-at-entry -- -program_arg value</span><br><span class="line">(lldb) process launch -- &lt;args&gt;</span><br><span class="line">(lldb) r &lt;args&gt;</span><br></pre></td></tr></table></figure><h4 id="附加在已经运行的程序"><a href="#附加在已经运行的程序" class="headerlink" title="附加在已经运行的程序"></a>附加在已经运行的程序</h4><p>waitfor 参数，会在下次程序运行时自动附加上</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(lldb) process attach --pid 123</span><br><span class="line">(lldb) process attach --name Sketch</span><br><span class="line">(lldb) process attach --name Sketch --waitfor</span><br></pre></td></tr></table></figure><h4 id="继续运行"><a href="#继续运行" class="headerlink" title="继续运行"></a>继续运行</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(lldb) thread continue // &quot;c&quot;</span><br><span class="line">(lldb) thread step-in    // The same as gdb&#x27;s &quot;step&quot; or &quot;s&quot;</span><br><span class="line">(lldb) thread step-over  // The same as gdb&#x27;s &quot;next&quot; or &quot;n&quot;</span><br><span class="line">(lldb) thread step-out   // The same as gdb&#x27;s &quot;finish&quot; or &quot;f&quot;</span><br><span class="line"></span><br><span class="line">// 按指令步进</span><br><span class="line">(lldb) thread step-inst       // The same as gdb&#x27;s &quot;stepi&quot; / &quot;si&quot;</span><br><span class="line">(lldb) thread step-over-inst  // The same as gdb&#x27;s &quot;nexti&quot; / &quot;ni&quot;</span><br></pre></td></tr></table></figure><h3 id="停止程序"><a href="#停止程序" class="headerlink" title="停止程序"></a>停止程序</h3><p>Stop your process.</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(lldb) exit</span><br></pre></td></tr></table></figure><h3 id="查看当前代码"><a href="#查看当前代码" class="headerlink" title="查看当前代码"></a>查看当前代码</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(lldb) f</span><br><span class="line">//显示前 10 行</span><br><span class="line">(lldb) l -</span><br><span class="line">list 1就回到第一行了。l 13就是从第13行开始往下看10行。</span><br><span class="line">list 文件名看其他文件的代码</span><br><span class="line">(lldb) list ArrayUtils.c</span><br><span class="line">看某个函数的代码</span><br><span class="line">(lldb) list main</span><br></pre></td></tr></table></figure><h3 id="查看变量"><a href="#查看变量" class="headerlink" title="查看变量"></a>查看变量</h3><p>print（简写p）如果打印的是基础数据类型，则会列出基础数据类型的类型和值。如果是对象，还会打印出对象指针地址<br>print的打印信息较多，如果只想查看对象的值，则可以使用po（printobject）命令<br>对于基础数据类型，还可以指定格式打印，如用16进制的格式打印：<br>po一般用来输出指针指向的那个对象，p一般用来输出基础变量。普通数组两者都可用</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(lldb) p str</span><br><span class="line">(lldb) po str</span><br><span class="line">(lldb) p/x 16</span><br><span class="line">0x10</span><br></pre></td></tr></table></figure><h3 id="查看本地变量"><a href="#查看本地变量" class="headerlink" title="查看本地变量"></a>查看本地变量</h3><p>frame variable 简称 fr v</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">列出所有变量</span><br><span class="line">(lldb) fr v</span><br><span class="line"></span><br><span class="line">指定变量 self</span><br><span class="line">(lldb) fr v self</span><br><span class="line"></span><br><span class="line">指定变量 self 的子元素</span><br><span class="line">(lldb) fr v self.isa</span><br></pre></td></tr></table></figure><h3 id="设置显示代码行数"><a href="#设置显示代码行数" class="headerlink" title="设置显示代码行数"></a>设置显示代码行数</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(lldb) set set stop-line-count-before 10</span><br><span class="line">(lldb) set set stop-line-count-after 10</span><br></pre></td></tr></table></figure><h3 id="设置查看类型"><a href="#设置查看类型" class="headerlink" title="设置查看类型"></a>设置查看类型</h3><p>下面会把 int，unsigned char 类型的数据显示成 16 进制形式</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(lldb) type format add --format hex int</span><br><span class="line">(lldb) type format add --format hex &quot;unsigned char&quot;</span><br></pre></td></tr></table></figure><h3 id="设置别名"><a href="#设置别名" class="headerlink" title="设置别名"></a>设置别名</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 比如下面的这条命令</span><br><span class="line">(lldb) breakpoint set --file DebugDemo.c --line 10</span><br><span class="line"></span><br><span class="line"># 你就可以写这样的别名</span><br><span class="line">(lldb) command alias brpos breakpoint set -f %1 -l %2</span><br><span class="line"></span><br><span class="line"># 使用的时候就像这样就好了</span><br><span class="line">(lldb) brpos DebugDemo.c 10</span><br></pre></td></tr></table></figure><h3 id="修改变量"><a href="#修改变量" class="headerlink" title="修改变量"></a>修改变量</h3><p>expression表达式(expr)，expr常用于调试时修改变量的值</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(lldb) expr self.productId = @&quot;A0000001076&quot;</span><br></pre></td></tr></table></figure><p>它的作用不仅仅是修改变量的值，你加其他功能的代码也是可以的，只要是和上下文相关的一句代码就OK<br>注意：表达式之后不需要加分号，加了分号之后会报错</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(lldb) expr self.superNavBarView.backgroundColor = [UIColor redColor]</span><br><span class="line">(UICachedDeviceRGBColor *) $3 = 0x00007ffc783d0290</span><br></pre></td></tr></table></figure><h3 id="查看线程状态"><a href="#查看线程状态" class="headerlink" title="查看线程状态"></a>查看线程状态</h3><p>thread backtrace 简称 bt<br><code>thread backtrace [-c &lt;count&gt;] [-s &lt;frame-index&gt;] [-e &lt;boolean&gt;]</code><br>thread backtrace后面跟的都是命令选项：<br>-c：设置打印堆栈的帧数(frame)<br>-s：设置从哪个帧(frame)开始打印<br>-e：是否显示额外的回溯</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">查看当前线程信息，* 号表示当前线程</span><br><span class="line">(lldb) thread list</span><br><span class="line">// 查看调用栈</span><br><span class="line">(lldb) bt</span><br><span class="line">(lldb) bt all</span><br><span class="line">// 选择线程2</span><br><span class="line">(lldb) thread select 2</span><br><span class="line">thread info: 输出当前线程的信息</span><br></pre></td></tr></table></figure><h3 id="列出主应用和依赖的动态库"><a href="#列出主应用和依赖的动态库" class="headerlink" title="列出主应用和依赖的动态库"></a>列出主应用和依赖的动态库</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(lldb) image list</span><br></pre></td></tr></table></figure><p>命令行参数</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Usage:</span><br><span class="line"></span><br><span class="line">  lldb -h</span><br><span class="line">  lldb -v [[--] &lt;PROGRAM-ARG-1&gt; [&lt;PROGRAM_ARG-2&gt; ...]]</span><br><span class="line">  lldb -a &lt;arch&gt; -f &lt;filename&gt; [-c &lt;filename&gt;] [-s &lt;filename&gt;] [-o &lt;none&gt;] [-S &lt;filename&gt;] [-O &lt;none&gt;] [-k &lt;none&gt;] [-K &lt;filename&gt;] [-Q] [-b] [-e] [-x] [-X] [-l &lt;script-language&gt;] [-d] [[--] &lt;PROGRAM-ARG-1&gt; [&lt;PROGRAM_ARG-2&gt; ...]]</span><br><span class="line">  lldb -n &lt;process-name&gt; -w [-s &lt;filename&gt;] [-o &lt;none&gt;] [-S &lt;filename&gt;] [-O &lt;none&gt;] [-k &lt;none&gt;] [-K &lt;filename&gt;] [-Q] [-b] [-e] [-x] [-X] [-l &lt;script-language&gt;] [-d]</span><br><span class="line">  lldb -p &lt;pid&gt; [-s &lt;filename&gt;] [-o &lt;none&gt;] [-S &lt;filename&gt;] [-O &lt;none&gt;] [-k &lt;none&gt;] [-K &lt;filename&gt;] [-Q] [-b] [-e] [-x] [-X] [-l &lt;script-language&gt;] [-d]</span><br><span class="line">  lldb -P</span><br><span class="line">  lldb -r [&lt;none&gt;] -R &lt;none&gt;</span><br><span class="line"></span><br><span class="line">       -h</span><br><span class="line">       --help</span><br><span class="line">            Prints out the usage information for the LLDB debugger.</span><br><span class="line"></span><br><span class="line">       -v</span><br><span class="line">       --version</span><br><span class="line">            Prints out the current version number of the LLDB debugger.</span><br><span class="line"></span><br><span class="line">       -a &lt;arch&gt;</span><br><span class="line">       --arch &lt;arch&gt;</span><br><span class="line">            Tells the debugger to use the specified architecture when starting</span><br><span class="line">            and running the program.  &lt;architecture&gt; must be one of the</span><br><span class="line">            architectures for which the program was compiled.</span><br><span class="line"></span><br><span class="line">       -f &lt;filename&gt;</span><br><span class="line">       --file &lt;filename&gt;</span><br><span class="line">            Tells the debugger to use the file &lt;filename&gt; as the program to be</span><br><span class="line">            debugged.</span><br><span class="line"></span><br><span class="line">       -c &lt;filename&gt;</span><br><span class="line">       --core &lt;filename&gt;</span><br><span class="line">            Tells the debugger to use the fullpath to &lt;path&gt; as the core file.</span><br><span class="line"></span><br><span class="line">       -p &lt;pid&gt;</span><br><span class="line">       --attach-pid &lt;pid&gt;</span><br><span class="line">            Tells the debugger to attach to a process with the given pid.</span><br><span class="line"></span><br><span class="line">       -n &lt;process-name&gt;</span><br><span class="line">       --attach-name &lt;process-name&gt;</span><br><span class="line">            Tells the debugger to attach to a process with the given name.</span><br><span class="line"></span><br><span class="line">       -w</span><br><span class="line">       --wait-for</span><br><span class="line">            Tells the debugger to wait for a process with the given pid or name</span><br><span class="line">            to launch before attaching.</span><br><span class="line"></span><br><span class="line">       -s &lt;filename&gt;</span><br><span class="line">       --source &lt;filename&gt;</span><br><span class="line">            Tells the debugger to read in and execute the lldb commands in the</span><br><span class="line">            given file, after any file provided on the command line has been</span><br><span class="line">            loaded.</span><br><span class="line"></span><br><span class="line">       -o</span><br><span class="line">       --one-line</span><br><span class="line">            Tells the debugger to execute this one-line lldb command after any</span><br><span class="line">            file provided on the command line has been loaded.</span><br><span class="line"></span><br><span class="line">       -S &lt;filename&gt;</span><br><span class="line">       --source-before-file &lt;filename&gt;</span><br><span class="line">            Tells the debugger to read in and execute the lldb commands in the</span><br><span class="line">            given file, before any file provided on the command line has been</span><br><span class="line">            loaded.</span><br><span class="line"></span><br><span class="line">       -O</span><br><span class="line">       --one-line-before-file</span><br><span class="line">            Tells the debugger to execute this one-line lldb command before any</span><br><span class="line">            file provided on the command line has been loaded.</span><br><span class="line"></span><br><span class="line">       -k</span><br><span class="line">       --one-line-on-crash</span><br><span class="line">            When in batch mode, tells the debugger to execute this one-line</span><br><span class="line">            lldb command if the target crashes.</span><br><span class="line"></span><br><span class="line">       -K &lt;filename&gt;</span><br><span class="line">       --source-on-crash &lt;filename&gt;</span><br><span class="line">            When in batch mode, tells the debugger to source this file of lldb</span><br><span class="line">            commands if the target crashes.</span><br><span class="line"></span><br><span class="line">       -Q</span><br><span class="line">       --source-quietly</span><br><span class="line">            Tells the debugger to execute this one-line lldb command before any</span><br><span class="line">            file provided on the command line has been loaded.</span><br><span class="line"></span><br><span class="line">       -b</span><br><span class="line">       --batch</span><br><span class="line">            Tells the debugger to running the commands from -s, -S, -o &amp; -O,</span><br><span class="line">            and then quit.  However if any run command stopped due to a signal</span><br><span class="line">            or crash, the debugger will return to the interactive prompt at the</span><br><span class="line">            place of the crash.</span><br><span class="line"></span><br><span class="line">       -e</span><br><span class="line">       --editor</span><br><span class="line">            Tells the debugger to open source files using the host&#x27;s &quot;external</span><br><span class="line">            editor&quot; mechanism.</span><br><span class="line"></span><br><span class="line">       -x</span><br><span class="line">       --no-lldbinit</span><br><span class="line">            Do not automatically parse any &#x27;.lldbinit&#x27; files.</span><br><span class="line"></span><br><span class="line">       -X</span><br><span class="line">       --no-use-colors</span><br><span class="line">            Do not use colors.</span><br><span class="line"></span><br><span class="line">       -P</span><br><span class="line">       --python-path</span><br><span class="line">            Prints out the path to the lldb.py file for this version of lldb.</span><br><span class="line"></span><br><span class="line">       -l &lt;script-language&gt;</span><br><span class="line">       --script-language &lt;script-language&gt;</span><br><span class="line">            Tells the debugger to use the specified scripting language for</span><br><span class="line">            user-defined scripts, rather than the default.  Valid scripting</span><br><span class="line">            languages that can be specified include Python, Perl, Ruby and Tcl.</span><br><span class="line">            Currently only the Python extensions have been implemented.</span><br><span class="line"></span><br><span class="line">       -d</span><br><span class="line">       --debug</span><br><span class="line">            Tells the debugger to print out extra information for debugging</span><br><span class="line">            itself.</span><br><span class="line"></span><br><span class="line">       -r</span><br><span class="line">       --repl</span><br><span class="line">            Runs lldb in REPL mode with a stub process.</span><br><span class="line"></span><br><span class="line">       -R</span><br><span class="line">       --repl-language</span><br><span class="line">            Chooses the language for the REPL.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  Notes:</span><br><span class="line"></span><br><span class="line">       Multiple &quot;-s&quot; and &quot;-o&quot; options can be provided.  They will be processed</span><br><span class="line">       from left to right in order, with the source files and commands</span><br><span class="line">       interleaved.  The same is true of the &quot;-S&quot; and &quot;-O&quot; options.  The before</span><br><span class="line">       file and after file sets can intermixed freely, the command parser will</span><br><span class="line">       sort them out.  The order of the file specifiers (&quot;-c&quot;, &quot;-f&quot;, etc.) is</span><br><span class="line">       not significant in this regard.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       If you don&#x27;t provide -f then the first argument will be the file to be</span><br><span class="line">       debugged which means that &#x27;lldb -- &lt;filename&gt; [&lt;ARG1&gt; [&lt;ARG2&gt;]]&#x27; also</span><br><span class="line">       works.  But remember to end the options with &quot;--&quot; if any of your</span><br><span class="line">       arguments have a &quot;-&quot; in them.</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;ubuntu 16.04 安装 LLDB&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install LLDB&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;如果提示缺少 six 包，需要使用 python 安装一下&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// install pip&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;python get-pip.py&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pip install six&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;注意 docker 里面使用的时候，需要使用 –privileged 参数创建容器&lt;/p&gt;
&lt;h2 id=&quot;config-file-默认配置文件&quot;&gt;&lt;a href=&quot;#config-file-默认配置文件&quot; class=&quot;headerlink&quot; title=&quot;config file 默认配置文件&quot;&gt;&lt;/a&gt;config file 默认配置文件&lt;/h2&gt;&lt;p&gt;放入喜欢的命令，会在启动的时候执行&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;~/.lldbinit&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;type format add --format hex int&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;type format add --format hex &amp;quot;char&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;type format add --format hex &amp;quot;unsigned char&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;set set stop-line-count-before 20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;set set stop-line-count-after 15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;settings set target.max-string-summary-length 16384&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;command alias brpos breakpoint set -f %1 -l %2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;settings set target.process.thread.step-in-avoid-nodebug false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;settings set target.skip-prologue false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;settings set target.x86-disassembly-flavor intel&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;settings set stop-disassembly-count 8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;lldb-使用样例&quot;&gt;&lt;a href=&quot;#lldb-使用样例&quot; class=&quot;headerlink&quot; title=&quot;lldb 使用样例&quot;&gt;&lt;/a&gt;lldb 使用样例&lt;/h2&gt;&lt;p&gt;命令格式：&lt;br&gt;&lt;noun&gt;命令、&lt;verb&gt;命令操作、options命令选项、argument参数。命令各个元素之间用空格隔开，如果参数之中有空格则需要加上双引号。如果参数中带有反斜杠和双引号，则需要在其前面加上反斜杠。&lt;/verb&gt;&lt;/noun&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;noun&amp;gt; &amp;lt;verb&amp;gt; [-options [option-value]] [argument [argument...]]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;options命令选项可以放在命令行的任何地方，但是如果argument参数以“-”开头，那么必须在option后面添加“–”结束标志进行区分，从而确定option的正确位置。例如你想启动一程序，“process launch”命令的option为“–stop-at-entry”，同时希望命令的argument为“-program_arg value”，你应该输入的命令为：&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(lldb) process launch --stop-at-entry -- -program_arg value&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="区块链" scheme="http://zhengjun.top/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    
    <category term="blockchain" scheme="http://zhengjun.top/tags/blockchain/"/>
    
    <category term="bitcoin" scheme="http://zhengjun.top/tags/bitcoin/"/>
    
  </entry>
  
  <entry>
    <title>bitcoin学习rpc部分</title>
    <link href="http://zhengjun.top/2021/12/11/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%8C%BA%E5%9D%97%E9%93%BE/bitcoin/bitcoin-rpc%E9%83%A8%E5%88%86/"/>
    <id>http://zhengjun.top/2021/12/11/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%8C%BA%E5%9D%97%E9%93%BE/bitcoin/bitcoin-rpc%E9%83%A8%E5%88%86/</id>
    <published>2021-12-11T12:59:46.863Z</published>
    <updated>2018-08-10T01:52:04.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.jsonrpc.org/specification_v1">JSON-RPC</a><br><a href="https://bitcoin.org/en/developer-reference#rpc-quick-reference">RPC引用</a></p><p>涉及到的主要的文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">httprpc.h</span><br><span class="line">rawtransaction.cpp</span><br><span class="line">validation.h</span><br></pre></td></tr></table></figure><p>字节序列为大端表示<br>举例：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt; bitcoin-cli getblock</span><br><span class="line">&lt; 000000000000000082ccf8f1557c5d40b21edabb18d2d691cfbf87118bac7254</span><br><span class="line"></span><br><span class="line">显示的 hash 值如下</span><br><span class="line">5472ac8b1187bfcf91d6d218bbda1eb2405d7c55f1f8cc820000000000000000</span><br></pre></td></tr></table></figure><p>RPC 服务用来支持管理，钱包，查询（网路，区块数据）<br>如果使用 <code>bitcoin-qt</code> 默认 RPC 服务是关闭的。可以在配置文件 <code>bitcoin.conf</code> 中设置 <code>server=1</code><br>或者启动时添加参数 <code>-server</code><br>如果使用 <code>bitcoind</code> 默认 RPC 服务是开启的。<br>使用 RPC 服务需要认证，通过 <code>rpcuser</code>，<code>rpcpassword</code> 提供。<br><code>bitcoin-cli</code> 是客户端命令行工具用来访问 RPC 服务</p><p>RPC 服务监听端口mainnet <code>8332</code>， testnet,regtest mode <code>18332</code>，只支持 <code>POST</code> 操作<br>可以使用 <code>rpcport</code> 设置，默认监听本地端口，外部不能访问<br>使用 HTTP basic authentication 认证。 <code>Content-Type=text/plain</code>， <code>Content-Length</code> 设置为请求体长度<br>遵循 JSON-RPC 规范，</p><p>下面是目前了解到的所有命令。总共 101 个命令</p><span id="more"></span><h1 id="新增命令"><a href="#新增命令" class="headerlink" title="新增命令"></a>新增命令</h1><p><a href="https://bitcore.io/guides/bitcoin/">参考</a></p><h2 id="searchrawtransactions"><a href="#searchrawtransactions" class="headerlink" title="searchrawtransactions"></a>searchrawtransactions</h2><p>新增命令，通过地址获取所有的 UTXOs</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tyler@ubuntu16:~/Documents/primecoin-core-desktop-src$ ./src/primecoin-cli -rpcuser=user -rpcpassword=password searchrawtransactions AVAiurQjh4CsxsHoqfPzQxAF3tCU7jFNL7</span><br><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;txid&quot;: &quot;a0dd0f30ae94e194221cfb27aee74d983c60d18062a9777b26cacfbfaef2b55e&quot;,</span><br><span class="line">    &quot;hash&quot;: &quot;a0dd0f30ae94e194221cfb27aee74d983c60d18062a9777b26cacfbfaef2b55e&quot;,</span><br><span class="line">    &quot;version&quot;: 1,</span><br><span class="line">    &quot;size&quot;: 108,</span><br><span class="line">    &quot;vsize&quot;: 108,</span><br><span class="line">    &quot;locktime&quot;: 0,</span><br><span class="line">    &quot;vin&quot;: [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;coinbase&quot;: &quot;02cd0d010400062f503253482f&quot;,</span><br><span class="line">        &quot;sequence&quot;: 4294967295</span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    &quot;vout&quot;: [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;value&quot;: 19.02000000,</span><br><span class="line">        &quot;n&quot;: 0,</span><br><span class="line">        &quot;scriptPubKey&quot;: &#123;</span><br><span class="line">          &quot;asm&quot;: &quot;02fa5626eeab2fe38de0e6af08d720108459420c43aadfcd2d8eb20bdb3146261e OP_CHECKSIG&quot;,</span><br><span class="line">          &quot;hex&quot;: &quot;2102fa5626eeab2fe38de0e6af08d720108459420c43aadfcd2d8eb20bdb3146261eac&quot;,</span><br><span class="line">          &quot;reqSigs&quot;: 1,</span><br><span class="line">          &quot;type&quot;: &quot;pubkey&quot;,</span><br><span class="line">          &quot;addresses&quot;: [</span><br><span class="line">            &quot;AVAiurQjh4CsxsHoqfPzQxAF3tCU7jFNL7&quot;</span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    &quot;hex&quot;: &quot;01000000010000000000000000000000000000000000000000000000000000000000000000ffffffff0d02cd0d010400062f503253482fffffffff0180375e7100000000232102fa5626eeab2fe38de0e6af08d720108459420c43aadfcd2d8eb20bdb3146261eac00000000&quot;,</span><br><span class="line">    &quot;blockhash&quot;: &quot;0f0f1b6a376027421fd3ccbc142192750c06f8403bb155d8f5fc95cb49aaa1a3&quot;,</span><br><span class="line">    &quot;confirmations&quot;: 2769364,</span><br><span class="line">    &quot;time&quot;: 1373347816,</span><br><span class="line">    &quot;blocktime&quot;: 1373347816</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl --user user:password --data-binary &#x27;&#123;&quot;jsonrpc&quot;:&quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;:&quot;searchrawtransactions&quot;,&quot;params&quot;:[&quot;ATyjPcDsQgHgCjX5mi1U3xgrKp36QRiWVj&quot;]&#125;&#x27; -H &#x27;content-type: text/plain;&#x27; http://103.84.87.82:9912/</span><br></pre></td></tr></table></figure><h2 id="getaddressbalance"><a href="#getaddressbalance" class="headerlink" title="getaddressbalance"></a>getaddressbalance</h2><p>Requires Config: addressindex=1<br>从已确认交易中查询一个或多个地址的余额，返回单位是 satoshis<br>下面是 PrimeCoin 地址<br>AUwoythQxMwt9qW32fcBvoAC716kg4mtGm<br>ANqptFgMreMPaWkDtduUtL4pCb4TD44rdD<br>AHmMUftyK8d6TNcExDmj9JPFxNNobGCgZZ</p><p>AUwoythQxMwt9qW32fcBvoAC716kg4mtGm 的 txid<br>2ba413e793f565715a0fc29a96d46c2ebc61788644b6b17e1f7ac835c96c2c41</p><p>AajqvJzE7yAiNucm1Rvrcju8rKNG3s8XQu 的 txid<br>2ba413e793f565715a0fc29a96d46c2ebc61788644b6b17e1f7ac835c96c2c41</p><p>ATyjPcDsQgHgCjX5mi1U3xgrKp36QRiWVj 的 txid<br>62d0db870af1a15aa4109ccb92737ea8735a5fa9eac6e46a5ba2b75dd356264a</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bitcoin-cli getaddressbalance &#x27;&#123;&quot;addresses&quot;: [&quot;12c6DSiU4Rq3P4ZxziKxzrL5LmMBrzjrJX&quot;]&#125;&#x27;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;balance&quot;: 25527936,</span><br><span class="line">  &quot;received&quot;: 25527936</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>说明：received 是接收到的资产，包括从同一个地址收到的找零</p><p>使用 http 访问</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl --user user:password --data-binary &#x27;&#123;&quot;jsonrpc&quot;:&quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;:&quot;getaddressbalance&quot;,&quot;params&quot;:[&quot;&#123;\&quot;addresses\&quot;:[\&quot;AaigSgLkYT638VT7DswGGzLszUXdDexo4b\&quot;,\&quot;AaigSgLkYT638VT7DswGGzLszUXdDexo4b\&quot;]&#125;&quot;]&#125;&#x27; -H &#x27;content-type: text/plain;&#x27; http://127.0.0.1:9912/</span><br></pre></td></tr></table></figure><p>调试指令</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">r -printtoconsole -rpcuser=user -rpcpassword=password -txindex=1 -addrindex=1</span><br><span class="line"></span><br><span class="line">./src/primecoin-cli -rpcuser=user -rpcpassword=password getaddressbalance  &#x27;&#123;&quot;addresses&quot;: [&quot;12c6DSiU4Rq3P4ZxziKxzrL5LmMBrzjrJX&quot;]&#125;&#x27;</span><br></pre></td></tr></table></figure><h2 id="getaddresstxids"><a href="#getaddresstxids" class="headerlink" title="getaddresstxids"></a>getaddresstxids</h2><p>Requires Config: addressindex=1<br>搜索涉及到一个或多个地址的 txids，按照块排序，最近的块在最下面。只包括确认的交易，可以指定块的高度范围。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@szftest:/home/user# ./src/primecoin-cli -rpcuser=user -rpcpassword=password getaddresstxids &#x27;&#123;&quot;addresses&quot;: [&quot;12c6DSiU4Rq3P4ZxziKxzrL5LmMBrzjrJX&quot;], &quot;start&quot;: 220151, &quot;end&quot;: 320261&#125;&#x27;</span><br><span class="line">[</span><br><span class="line">  &quot;fd87f9adebb17f4ebb1673da76ff48ad29e64b7afa02fda0f2c14e43d220fe24&quot;,</span><br><span class="line">  &quot;36ebe0ca3237002acb12e1474a3859bde0ac84b419ec4ae373e63363ebef731c&quot;,</span><br><span class="line">  &quot;d658ab87cc053b8dbcfd4aa2717fd23cc3edfe90ec75351fadd6a0f7993b461d&quot;,</span><br><span class="line">  &quot;ffd901679de65d4398de90cefe68d2c3ef073c41f7e8dbec2fb5cd75fe71dfe7&quot;,</span><br><span class="line">  &quot;a66dddd42f9f2491d3c336ce5527d45cc5c2163aaed3158f81dc054447f447a2&quot;,</span><br><span class="line">  &quot;065ef6b1463f552f675622a5d1fd2c08d6324b4402049f68e767a719e2049e8d&quot;,</span><br><span class="line">  &quot;cea36d008badf5c7866894b191d3239de9582d89b6b452b596f1f1b76347f8cb&quot;,</span><br><span class="line">  &quot;a3a6f902a51a2cbebede144e48a88c05e608c2cce28024041a5b9874013a1e2a&quot;,</span><br><span class="line">  &quot;24087a08309ea5796ef139e65f13ce10db1e4465057b665b9d5102a640aac6be&quot;,</span><br><span class="line">  &quot;91b21c74b6b9cc168fc9a079d0aadf4acc90706196a7278cd674611a9104122e&quot;,</span><br><span class="line">  &quot;1b0235867691784492804fce22a18c2337c97d58a1c63fc275fe26137596d671&quot;,</span><br><span class="line">  &quot;7f66c5e6a8bb4b9e640dfcb097232c740a43481dc02817959f48c48d3436b583&quot;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h2 id="getaddressutxos"><a href="#getaddressutxos" class="headerlink" title="getaddressutxos"></a>getaddressutxos</h2><p>Requires Config: addressindex=1<br>返回一个或多个地址的未消费输出，只包括已确认交易，按照区块高度排序</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">~$ bitcoin-cli getaddressutxos &#x27;&#123;&quot;addresses&quot;: [&quot;12cbQLTFMXRnSzktFkuoG3eHoMeFtpTu3S&quot;]&#125;&#x27;</span><br><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;address&quot;: &quot;12cbQLTFMXRnSzktFkuoG3eHoMeFtpTu3S&quot;,</span><br><span class="line">    &quot;txid&quot;: &quot;1554a02d4eb1c7a73e3736922ed99530e360784e709896c42e5756e65b2da341&quot;,</span><br><span class="line">    &quot;outputIndex&quot;: 2,</span><br><span class="line">    &quot;script&quot;: &quot;76a91411b366edfc0a8b66feebae5c2e25a7b6a5d1cf3188ac&quot;,</span><br><span class="line">    &quot;satoshis&quot;: 1,</span><br><span class="line">    &quot;height&quot;: 220151</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;address&quot;: &quot;12cbQLTFMXRnSzktFkuoG3eHoMeFtpTu3S&quot;,</span><br><span class="line">    &quot;txid&quot;: &quot;20fb69a94413637cb50f65e473f91d2599a04d5a0bf9bf6a5e9e843df2710ea4&quot;,</span><br><span class="line">    &quot;outputIndex&quot;: 0,</span><br><span class="line">    &quot;script&quot;: &quot;76a91411b366edfc0a8b66feebae5c2e25a7b6a5d1cf3188ac&quot;,</span><br><span class="line">    &quot;satoshis&quot;: 30000,</span><br><span class="line">    &quot;height&quot;: 228208</span><br><span class="line">  &#125;,</span><br><span class="line">  ...</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">curl --user myusername --data-binary &#x27;&#123;&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;getaddressutxos&quot;, &quot;params&quot;: [&#123;&quot;addresses&quot;: [&quot;Pb7FLL3DyaAVP2eGfRiEkj4U8ZJ3RHLY9g&quot;]&#125;] &#125;&#x27; -H &#x27;content-type: text/plain;&#x27; http://127.0.0.1:51935/</span><br></pre></td></tr></table></figure><h1 id="Block-Chain-RPCs-20-个"><a href="#Block-Chain-RPCs-20-个" class="headerlink" title="Block Chain RPCs 20 个"></a>Block Chain RPCs 20 个</h1><h2 id="GetBestBlockHash"><a href="#GetBestBlockHash" class="headerlink" title="GetBestBlockHash"></a>GetBestBlockHash</h2><p>主链的最近一个区块的 header hash</p><h2 id="GetBlock"><a href="#GetBlock" class="headerlink" title="GetBlock"></a>GetBlock</h2><p>通过 header hash 获取区块 0.13.0 更新</p><h2 id="GetBlockChainInfo"><a href="#GetBlockChainInfo" class="headerlink" title="GetBlockChainInfo"></a>GetBlockChainInfo</h2><p>当前区块链的信息</p><h2 id="GetBlockCount"><a href="#GetBlockCount" class="headerlink" title="GetBlockCount"></a>GetBlockCount</h2><p>主链的区块数量</p><h2 id="GetBlockHash"><a href="#GetBlockHash" class="headerlink" title="GetBlockHash"></a>GetBlockHash</h2><p>返回主链指定高度的 header hash</p><h2 id="GetBlockHeader"><a href="#GetBlockHeader" class="headerlink" title="GetBlockHeader"></a>GetBlockHeader</h2><p>通过指定的 header hash 获取区块头 0.12.0 新增</p><h2 id="GetChainTips"><a href="#GetChainTips" class="headerlink" title="GetChainTips"></a>GetChainTips</h2><p>返回每个本地区块链的最高区块信息</p><h2 id="GetDifficulty"><a href="#GetDifficulty" class="headerlink" title="GetDifficulty"></a>GetDifficulty</h2><p>返回 POW 的难度值，是最小难度的倍数</p><h2 id="GetMemPoolAncestors"><a href="#GetMemPoolAncestors" class="headerlink" title="GetMemPoolAncestors"></a>GetMemPoolAncestors</h2><p>返回 mempool 中的一个交易的所有在 mempool 的祖先 0.13.0 新增</p><h2 id="GetMemPoolDescendants"><a href="#GetMemPoolDescendants" class="headerlink" title="GetMemPoolDescendants"></a>GetMemPoolDescendants</h2><p>返回 mempool 中的一个交易的所有在 mempool 的后代 0.13.0 新增</p><h2 id="GetMemPoolEntry"><a href="#GetMemPoolEntry" class="headerlink" title="GetMemPoolEntry"></a>GetMemPoolEntry</h2><p>返回指定交易的 mempool data 0.13.0 新增</p><h2 id="GetMemPoolInfo"><a href="#GetMemPoolInfo" class="headerlink" title="GetMemPoolInfo"></a>GetMemPoolInfo</h2><p>返回节点当前交易 memory pool 的信息 0.12.0 更新</p><h2 id="GetRawMemPool"><a href="#GetRawMemPool" class="headerlink" title="GetRawMemPool"></a>GetRawMemPool</h2><p>返回所有 memory pool 中的交易标识 TXIDs 0.13.0 更新</p><h2 id="GetTxOut"><a href="#GetTxOut" class="headerlink" title="GetTxOut"></a>GetTxOut</h2><p>返回一笔交易输出的详细信息，只有 UTXOs 是保证存在的。</p><h2 id="GetTxOutProof"><a href="#GetTxOutProof" class="headerlink" title="GetTxOutProof"></a>GetTxOutProof</h2><p>返回一个区块中的一个或多个指定交易的 16 进制格式的证明信息</p><h2 id="GetTxOutSetInfo"><a href="#GetTxOutSetInfo" class="headerlink" title="GetTxOutSetInfo"></a>GetTxOutSetInfo</h2><p>返回已确认的 UTXO 集合的统计数据</p><h2 id="PreciousBlock"><a href="#PreciousBlock" class="headerlink" title="PreciousBlock"></a>PreciousBlock</h2><p>标识在同一网络中，比其他先接收的区块 0.14.0 新增</p><h2 id="PruneBlockChain"><a href="#PruneBlockChain" class="headerlink" title="PruneBlockChain"></a>PruneBlockChain</h2><p>按照指定的高度或时间戳来修建区块链 0.14.0 新增</p><h2 id="VerifyChain"><a href="#VerifyChain" class="headerlink" title="VerifyChain"></a>VerifyChain</h2><p>校验每个本地链的入口</p><h2 id="VerifyTxOutProof"><a href="#VerifyTxOutProof" class="headerlink" title="VerifyTxOutProof"></a>VerifyTxOutProof</h2><p>验证指向的区块中的一笔或多笔交易的工作证明，成功返回交易信息，如果不在主链返回 RPC 错误 0.11.0 新增</p><h1 id="Control-RPCs-3-个-过期-1-个"><a href="#Control-RPCs-3-个-过期-1-个" class="headerlink" title="Control RPCs 3 个 过期 1 个"></a>Control RPCs 3 个 过期 1 个</h1><h2 id="GetInfo-过期"><a href="#GetInfo-过期" class="headerlink" title="GetInfo 过期"></a>GetInfo 过期</h2><p>打印节点和网络的相关信息</p><h2 id="Help"><a href="#Help" class="headerlink" title="Help"></a>Help</h2><p>列出所有的 RPC 命令，或者指定 RPC 命令的相关帮助信息</p><h2 id="Stop"><a href="#Stop" class="headerlink" title="Stop"></a>Stop</h2><p>安全停止服务</p><h1 id="Generating-RPCs-2-个"><a href="#Generating-RPCs-2-个" class="headerlink" title="Generating RPCs 2 个"></a>Generating RPCs 2 个</h1><h2 id="Generate"><a href="#Generate" class="headerlink" title="Generate"></a>Generate</h2><p>立即生成一个区块  0.11.0 新增, 0.13.0 更新</p><h2 id="GenerateToAddress"><a href="#GenerateToAddress" class="headerlink" title="GenerateToAddress"></a>GenerateToAddress</h2><p>立即挖一个区块到指定地址 0.13.0 新增</p><h1 id="Mining-RPCs-5-个"><a href="#Mining-RPCs-5-个" class="headerlink" title="Mining RPCs 5 个"></a>Mining RPCs 5 个</h1><h2 id="GetBlockTemplate"><a href="#GetBlockTemplate" class="headerlink" title="GetBlockTemplate"></a>GetBlockTemplate</h2><p>获取一个区块模板给挖矿软件使用</p><h2 id="GetMiningInfo"><a href="#GetMiningInfo" class="headerlink" title="GetMiningInfo"></a>GetMiningInfo</h2><p>返回挖矿相关的信息 0.14.0 更新</p><h2 id="GetNetworkHashPS"><a href="#GetNetworkHashPS" class="headerlink" title="GetNetworkHashPS"></a>GetNetworkHashPS</h2><p>根据最后的区块信息估算当前或历史的每秒产生区块数</p><h2 id="PrioritiseTransaction"><a href="#PrioritiseTransaction" class="headerlink" title="PrioritiseTransaction"></a>PrioritiseTransaction</h2><p>向一笔交易增加虚拟的优先级或手续费，使交易以较低的优先级或手续费进入刚挖出的区块</p><h2 id="SubmitBlock"><a href="#SubmitBlock" class="headerlink" title="SubmitBlock"></a>SubmitBlock</h2><p>接收一个区块，验证有效，并转发</p><h1 id="Network-RPCs-12-个"><a href="#Network-RPCs-12-个" class="headerlink" title="Network RPCs 12 个"></a>Network RPCs 12 个</h1><h2 id="AddNode"><a href="#AddNode" class="headerlink" title="AddNode"></a>AddNode</h2><p>从 addnode 列表中增加或删除一个节点，或者尝试连接一个节点一次。 0.14.0 更新</p><h2 id="ClearBanned"><a href="#ClearBanned" class="headerlink" title="ClearBanned"></a>ClearBanned</h2><p>清除禁止节点列表 0.12.0 新增</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bitcoin-cli -rpcuser=user -rpcpassword=password clearbanned</span><br><span class="line"></span><br><span class="line">curl --user myusername --data-binary &#x27;&#123;&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;clearbanned&quot;, &quot;params&quot;: [] &#125;&#x27; -H &#x27;content-type: text/plain;&#x27; http://127.0.0.1:8332/</span><br></pre></td></tr></table></figure><h2 id="DisconnectNode"><a href="#DisconnectNode" class="headerlink" title="DisconnectNode"></a>DisconnectNode</h2><p>立即从指定节点断开 0.12.0 新增</p><h2 id="GetAddedNodeInfo"><a href="#GetAddedNodeInfo" class="headerlink" title="GetAddedNodeInfo"></a>GetAddedNodeInfo</h2><p>返回添加节点或所有添加节点的信息 0.14.0 更新<br>只有手动使用 RPC 命令 <code>addnode</code> 添加的节点，才会有相关信息</p><h2 id="GetConnectionCount"><a href="#GetConnectionCount" class="headerlink" title="GetConnectionCount"></a>GetConnectionCount</h2><p>返回连接其他节点的数量</p><h2 id="GetNetTotals"><a href="#GetNetTotals" class="headerlink" title="GetNetTotals"></a>GetNetTotals</h2><p>返回网络流量的相关信息，包括输入字节，输出字节和时间 0.12.0 更新</p><h2 id="GetNetworkInfo"><a href="#GetNetworkInfo" class="headerlink" title="GetNetworkInfo"></a>GetNetworkInfo</h2><p>返回节点连接网络的相关信息 0.13.0 更新</p><h2 id="GetPeerInfo"><a href="#GetPeerInfo" class="headerlink" title="GetPeerInfo"></a>GetPeerInfo</h2><p>返回每个连接的网络节点的信息 0.13.0 更新</p><h2 id="ListBanned"><a href="#ListBanned" class="headerlink" title="ListBanned"></a>ListBanned</h2><p>列出所有禁止的 IPs/Subnets 0.12.0 新增</p><h2 id="Ping"><a href="#Ping" class="headerlink" title="Ping"></a>Ping</h2><p>发送一个 P2P ping 消息给所有节点，测试延迟，结果由 <code>getpeerinfo</code> RPC 命令的 <code>pingtime</code> 和 <code>pingwait</code> 提供<br>单位是 10 进制的秒。<br>ping 命令和其他命令一样进入队列处理，所以反应的是处理延迟，不是网络 ping</p><h2 id="SetBan"><a href="#SetBan" class="headerlink" title="SetBan"></a>SetBan</h2><p>从禁止列表中添加或删除 IP/Subnet 0.12.0</p><h2 id="SetNetworkActive"><a href="#SetNetworkActive" class="headerlink" title="SetNetworkActive"></a>SetNetworkActive</h2><p>禁止，启用所有的 P2P 网络 0.14.0 新增</p><h1 id="Raw-Transaction-RPCs-7-个"><a href="#Raw-Transaction-RPCs-7-个" class="headerlink" title="Raw Transaction RPCs 7 个"></a>Raw Transaction RPCs 7 个</h1><h2 id="CreateRawTransaction"><a href="#CreateRawTransaction" class="headerlink" title="CreateRawTransaction"></a>CreateRawTransaction</h2><p>创建一个未签名的序列化交易</p><h2 id="FundRawTransaction"><a href="#FundRawTransaction" class="headerlink" title="FundRawTransaction"></a>FundRawTransaction</h2><p>增加输入到交易中直到满足输出数量</p><h2 id="DecodeRawTransaction"><a href="#DecodeRawTransaction" class="headerlink" title="DecodeRawTransaction"></a>DecodeRawTransaction</h2><p>解码 16 进制数据到 json 格式</p><h2 id="DecodeScript"><a href="#DecodeScript" class="headerlink" title="DecodeScript"></a>DecodeScript</h2><p>解码一个 16 进制的 P2SH 赎回脚本</p><h2 id="GetRawTransaction"><a href="#GetRawTransaction" class="headerlink" title="GetRawTransaction"></a>GetRawTransaction</h2><p>获取一个 16 进制的序列化交易或者 json 对象格式的交易</p><h2 id="SendRawTransaction"><a href="#SendRawTransaction" class="headerlink" title="SendRawTransaction"></a>SendRawTransaction</h2><p>验证交易并广播到网络</p><h2 id="SignRawTransaction"><a href="#SignRawTransaction" class="headerlink" title="SignRawTransaction"></a>SignRawTransaction</h2><p>使用钱包中的私钥对序列化交易做签名</p><h1 id="Utility-RPCs-6-个"><a href="#Utility-RPCs-6-个" class="headerlink" title="Utility RPCs 6 个"></a>Utility RPCs 6 个</h1><h2 id="CreateMultiSig"><a href="#CreateMultiSig" class="headerlink" title="CreateMultiSig"></a>CreateMultiSig</h2><p>创建一个 P2SH 的多重签名地址</p><h2 id="EstimateFee"><a href="#EstimateFee" class="headerlink" title="EstimateFee"></a>EstimateFee</h2><p>按KiB估算交易的手续费</p><h2 id="EstimatePriority"><a href="#EstimatePriority" class="headerlink" title="EstimatePriority"></a>EstimatePriority</h2><p>估算免费的高优先级交易 过期</p><h2 id="GetMemoryInfo"><a href="#GetMemoryInfo" class="headerlink" title="GetMemoryInfo"></a>GetMemoryInfo</h2><p>获取使用的内存信息</p><h2 id="ValidateAddress"><a href="#ValidateAddress" class="headerlink" title="ValidateAddress"></a>ValidateAddress</h2><p>返回指定的地址信息</p><h2 id="VerifyMessage"><a href="#VerifyMessage" class="headerlink" title="VerifyMessage"></a>VerifyMessage</h2><p>验证一个签名信息</p><h1 id="Wallet-RPCs-46-个，7个过期的"><a href="#Wallet-RPCs-46-个，7个过期的" class="headerlink" title="Wallet RPCs 46 个，7个过期的"></a>Wallet RPCs 46 个，7个过期的</h1><h2 id="AbandonTransaction"><a href="#AbandonTransaction" class="headerlink" title="AbandonTransaction"></a>AbandonTransaction</h2><p>作废交易</p><h2 id="AddWitnessAddress"><a href="#AddWitnessAddress" class="headerlink" title="AddWitnessAddress"></a>AddWitnessAddress</h2><p>为脚本添加一个证人地址</p><h2 id="AddMultiSigAddress"><a href="#AddMultiSigAddress" class="headerlink" title="AddMultiSigAddress"></a>AddMultiSigAddress</h2><p>添加一个多重签名地址</p><h2 id="BackupWallet"><a href="#BackupWallet" class="headerlink" title="BackupWallet"></a>BackupWallet</h2><p>备份 <code>wallet.dat</code> 到指定路径</p><h2 id="BumpFee"><a href="#BumpFee" class="headerlink" title="BumpFee"></a>BumpFee</h2><p>使用一笔新的更高手续费的交易替换已签名 RBF 的未确认钱包交易</p><h2 id="DumpPrivKey"><a href="#DumpPrivKey" class="headerlink" title="DumpPrivKey"></a>DumpPrivKey</h2><p>返回对应地址的 wallet-import-format (WIP) 私钥</p><h2 id="DumpWallet"><a href="#DumpWallet" class="headerlink" title="DumpWallet"></a>DumpWallet</h2><p>使用用户可读的格式创建或重写钱包的秘钥</p><h2 id="EncryptWallet"><a href="#EncryptWallet" class="headerlink" title="EncryptWallet"></a>EncryptWallet</h2><p>使用密码加密钱包</p><h2 id="GetAccountAddress"><a href="#GetAccountAddress" class="headerlink" title="GetAccountAddress"></a>GetAccountAddress</h2><p>返回账户对应的 bitcoin 地址</p><h2 id="GetAccount"><a href="#GetAccount" class="headerlink" title="GetAccount"></a>GetAccount</h2><p>返回指定地址的账户名称</p><h2 id="GetAddressesByAccount-过期"><a href="#GetAddressesByAccount-过期" class="headerlink" title="GetAddressesByAccount 过期"></a>GetAddressesByAccount 过期</h2><p>返回指定账户的地址列表</p><h2 id="GetBalance"><a href="#GetBalance" class="headerlink" title="GetBalance"></a>GetBalance</h2><p>使用十进制表示的所有账户或者指定账户的余额</p><h2 id="GetNewAddress"><a href="#GetNewAddress" class="headerlink" title="GetNewAddress"></a>GetNewAddress</h2><p>返回一个新的地址</p><h2 id="GetRawChangeAddress"><a href="#GetRawChangeAddress" class="headerlink" title="GetRawChangeAddress"></a>GetRawChangeAddress</h2><p>返回一个新的地址用来接收找零</p><h2 id="GetReceivedByAccount-过期"><a href="#GetReceivedByAccount-过期" class="headerlink" title="GetReceivedByAccount 过期"></a>GetReceivedByAccount 过期</h2><p>返回交易中指定确认数的指定账户的地址接收的总额，不包括 coinbase 交易</p><h2 id="GetReceivedByAddress"><a href="#GetReceivedByAddress" class="headerlink" title="GetReceivedByAddress"></a>GetReceivedByAddress</h2><p>返回交易中指定确认数的指定地址接收的总额，不包括 coinbase 交易</p><h2 id="GetTransaction"><a href="#GetTransaction" class="headerlink" title="GetTransaction"></a>GetTransaction</h2><p>获取钱包内交易的详细信息 0.12.0 更新</p><h2 id="GetUnconfirmedBalance"><a href="#GetUnconfirmedBalance" class="headerlink" title="GetUnconfirmedBalance"></a>GetUnconfirmedBalance</h2><p>返回钱包的全部余额</p><h2 id="GetWalletInfo"><a href="#GetWalletInfo" class="headerlink" title="GetWalletInfo"></a>GetWalletInfo</h2><p>提供钱包相关的信息</p><h2 id="ImportAddress"><a href="#ImportAddress" class="headerlink" title="ImportAddress"></a>ImportAddress</h2><p>添加地址或公钥脚本到钱包，不关联私钥，可以用来查看相关交易</p><h2 id="ImportMulti"><a href="#ImportMulti" class="headerlink" title="ImportMulti"></a>ImportMulti</h2><p>导入多个地址或脚本</p><h2 id="ImportPrunedFunds"><a href="#ImportPrunedFunds" class="headerlink" title="ImportPrunedFunds"></a>ImportPrunedFunds</h2><p>对于修剪后的钱包，不需要重新扫描就可以导入资金</p><h2 id="ImportPrivKey"><a href="#ImportPrivKey" class="headerlink" title="ImportPrivKey"></a>ImportPrivKey</h2><p>添加私钥到钱包</p><h2 id="ImportWallet"><a href="#ImportWallet" class="headerlink" title="ImportWallet"></a>ImportWallet</h2><p>从钱包 dump 文件格式中导入私钥</p><h2 id="KeyPoolRefill"><a href="#KeyPoolRefill" class="headerlink" title="KeyPoolRefill"></a>KeyPoolRefill</h2><p>填充未使用的预生成的秘钥的缓冲区</p><h2 id="ListAccounts-过期"><a href="#ListAccounts-过期" class="headerlink" title="ListAccounts 过期"></a>ListAccounts 过期</h2><p>列出账户和余额</p><h2 id="ListAddressGroupings"><a href="#ListAddressGroupings" class="headerlink" title="ListAddressGroupings"></a>ListAddressGroupings</h2><p>列出一组在相同交易中做为公开输入的有共同所有权的地址，或者从前一个作为找零用途的账户</p><h2 id="ListLockUnspent"><a href="#ListLockUnspent" class="headerlink" title="ListLockUnspent"></a>ListLockUnspent</h2><p>返回一组暂时无法消费的 outputs 列表</p><h2 id="ListReceivedByAccount-过期"><a href="#ListReceivedByAccount-过期" class="headerlink" title="ListReceivedByAccount 过期"></a>ListReceivedByAccount 过期</h2><p>列出每个账户收到的总额</p><h2 id="ListReceivedByAddress"><a href="#ListReceivedByAddress" class="headerlink" title="ListReceivedByAddress"></a>ListReceivedByAddress</h2><p>列出每一个地址收到的总额</p><h2 id="ListSinceBlock"><a href="#ListSinceBlock" class="headerlink" title="ListSinceBlock"></a>ListSinceBlock</h2><p>返回从指定块，加上指定深度区块的 header hash 之后涉及到钱包的所有交易</p><h2 id="ListTransactions-0-12-1-更新"><a href="#ListTransactions-0-12-1-更新" class="headerlink" title="ListTransactions 0.12.1 更新"></a>ListTransactions 0.12.1 更新</h2><p>列出涉及钱包的最近的交易</p><h2 id="ListUnspent"><a href="#ListUnspent" class="headerlink" title="ListUnspent"></a>ListUnspent</h2><p>列出属于钱包的 UTXO 数组 0.13.0 更新</p><h2 id="LockUnspent"><a href="#LockUnspent" class="headerlink" title="LockUnspent"></a>LockUnspent</h2><p>临时锁定或解锁指定的 outputs，被锁定的 outputs 在交易时不会被自动收集。</p><h2 id="Move-过期"><a href="#Move-过期" class="headerlink" title="Move 过期"></a>Move 过期</h2><p>使用 off-block-chain 交易，在钱包内的账户间移动指定金额</p><h2 id="RemovePrunedFunds-0-13-0-新加"><a href="#RemovePrunedFunds-0-13-0-新加" class="headerlink" title="RemovePrunedFunds 0.13.0 新加"></a>RemovePrunedFunds 0.13.0 新加</h2><p>从钱包删除指定的交易</p><h2 id="SendFrom-过期"><a href="#SendFrom-过期" class="headerlink" title="SendFrom 过期"></a>SendFrom 过期</h2><p>从本地账户消费到指定地址</p><h2 id="SendMany"><a href="#SendMany" class="headerlink" title="SendMany"></a>SendMany</h2><p>创建和广播一笔发送 outputs 到多个账户的交易</p><h2 id="SendToAddress"><a href="#SendToAddress" class="headerlink" title="SendToAddress"></a>SendToAddress</h2><p>消费到指定地址</p><h2 id="SetAccount-过期"><a href="#SetAccount-过期" class="headerlink" title="SetAccount 过期"></a>SetAccount 过期</h2><p>把指定地址放到给出的账户中</p><h2 id="SetTxFee"><a href="#SetTxFee" class="headerlink" title="SetTxFee"></a>SetTxFee</h2><p>设置本钱包创建的交易的手续费单位 /kb</p><h2 id="SignMessage"><a href="#SignMessage" class="headerlink" title="SignMessage"></a>SignMessage</h2><p>使用一个地址的私钥对消息签名</p><h2 id="SignMessageWithPrivKey-0-13-0-新增"><a href="#SignMessageWithPrivKey-0-13-0-新增" class="headerlink" title="SignMessageWithPrivKey 0.13.0 新增"></a>SignMessageWithPrivKey 0.13.0 新增</h2><p>使用输入的私钥对消息签名</p><h2 id="WalletLock"><a href="#WalletLock" class="headerlink" title="WalletLock"></a>WalletLock</h2><p>从内存移除钱包的加密密钥，锁定钱包。<br>执行完该命令后，在调用任何需要解锁钱包的功能之前，需要再次调用 <code>walletpassphrase</code></p><h2 id="WalletPassphrase"><a href="#WalletPassphrase" class="headerlink" title="WalletPassphrase"></a>WalletPassphrase</h2><p>按照输入的时间（秒），保存钱包的解锁密钥到内存中，重复发送该命令，可以设置新的时间</p><h2 id="WalletPassphraseChange"><a href="#WalletPassphraseChange" class="headerlink" title="WalletPassphraseChange"></a>WalletPassphraseChange</h2><p>设置新的钱包密码</p><h1 id="Removed-RPCs"><a href="#Removed-RPCs" class="headerlink" title="Removed RPCs"></a>Removed RPCs</h1><ul><li>GetGenerate: was removed in Bitcoin Core 0.13.0.</li><li>GetHashesPerSec: was removed in Bitcoin Core 0.11.0.</li><li>GetWork: was removed in Bitcoin Core 0.10.0.</li><li>SetGenerate: was removed in Bitcoin Core 0.13.0.</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.jsonrpc.org/specification_v1&quot;&gt;JSON-RPC&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://bitcoin.org/en/developer-reference#rpc-quick-reference&quot;&gt;RPC引用&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;涉及到的主要的文件&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;httprpc.h&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rawtransaction.cpp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;validation.h&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;字节序列为大端表示&lt;br&gt;举例：&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; bitcoin-cli getblock&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt; 000000000000000082ccf8f1557c5d40b21edabb18d2d691cfbf87118bac7254&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;显示的 hash 值如下&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5472ac8b1187bfcf91d6d218bbda1eb2405d7c55f1f8cc820000000000000000&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;RPC 服务用来支持管理，钱包，查询（网路，区块数据）&lt;br&gt;如果使用 &lt;code&gt;bitcoin-qt&lt;/code&gt; 默认 RPC 服务是关闭的。可以在配置文件 &lt;code&gt;bitcoin.conf&lt;/code&gt; 中设置 &lt;code&gt;server=1&lt;/code&gt;&lt;br&gt;或者启动时添加参数 &lt;code&gt;-server&lt;/code&gt;&lt;br&gt;如果使用 &lt;code&gt;bitcoind&lt;/code&gt; 默认 RPC 服务是开启的。&lt;br&gt;使用 RPC 服务需要认证，通过 &lt;code&gt;rpcuser&lt;/code&gt;，&lt;code&gt;rpcpassword&lt;/code&gt; 提供。&lt;br&gt;&lt;code&gt;bitcoin-cli&lt;/code&gt; 是客户端命令行工具用来访问 RPC 服务&lt;/p&gt;
&lt;p&gt;RPC 服务监听端口mainnet &lt;code&gt;8332&lt;/code&gt;， testnet,regtest mode &lt;code&gt;18332&lt;/code&gt;，只支持 &lt;code&gt;POST&lt;/code&gt; 操作&lt;br&gt;可以使用 &lt;code&gt;rpcport&lt;/code&gt; 设置，默认监听本地端口，外部不能访问&lt;br&gt;使用 HTTP basic authentication 认证。 &lt;code&gt;Content-Type=text/plain&lt;/code&gt;， &lt;code&gt;Content-Length&lt;/code&gt; 设置为请求体长度&lt;br&gt;遵循 JSON-RPC 规范，&lt;/p&gt;
&lt;p&gt;下面是目前了解到的所有命令。总共 101 个命令&lt;/p&gt;</summary>
    
    
    
    <category term="区块链" scheme="http://zhengjun.top/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    
    <category term="blockchain" scheme="http://zhengjun.top/tags/blockchain/"/>
    
    <category term="bitcoin" scheme="http://zhengjun.top/tags/bitcoin/"/>
    
  </entry>
  
  <entry>
    <title>levelDB接触</title>
    <link href="http://zhengjun.top/2021/12/11/%E5%8A%9F%E8%83%BD%E5%88%86%E7%B1%BB/%E6%95%B0%E6%8D%AE%E5%BA%93/levelDB%E6%8E%A5%E8%A7%A6/"/>
    <id>http://zhengjun.top/2021/12/11/%E5%8A%9F%E8%83%BD%E5%88%86%E7%B1%BB/%E6%95%B0%E6%8D%AE%E5%BA%93/levelDB%E6%8E%A5%E8%A7%A6/</id>
    <published>2021-12-11T12:59:44.687Z</published>
    <updated>2018-08-27T19:03:48.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://draveness.me/bigtable-leveldb">参考</a><br><a href="http://leveldb.org/">官网</a><br><a href="https://github.com/hxoht/ldb">cli工具</a><br><a href="https://github.com/syndtr/goleveldb">go impl</a></p><h2 id="leveldb是什么"><a href="#leveldb是什么" class="headerlink" title="leveldb是什么"></a>leveldb是什么</h2><p>一个单机的 Key,Value 数据库，适合写多读少，支持持久化，支持故障恢复，支持二进制数据<br>LevelDb是能够处理十亿级别规模Key-Value型数据持久性存储的C++ 程序库<br>官方网站报道其随机写性能达到40万条记录每秒，而随机读性能达到6万条记录每秒。<br>总体来说，LevelDb的写操作要大大快于读操作，而顺序读写操作则大大快于随机读写操作。</p><p>样例接口</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">class DB &#123;</span><br><span class="line"> public:</span><br><span class="line">  virtual Status Put(const WriteOptions&amp; options, const Slice&amp; key, const Slice&amp; value) = 0;</span><br><span class="line">  virtual Status Delete(const WriteOptions&amp; options, const Slice&amp; key) = 0;</span><br><span class="line">  virtual Status Write(const WriteOptions&amp; options, WriteBatch* updates) = 0;</span><br><span class="line">  virtual Status Get(const ReadOptions&amp; options, const Slice&amp; key, std::string* value) = 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>记录几个概念，有需要在深入了解</p><ol><li>memtable</li><li>Imuable memtable（其实我跟1是亲兄弟啦）</li><li>sstable</li><li>log</li><li>filter</li></ol><span id="more"></span><p>CLI 命令<br>打开目录，如果没有就创建</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ldb ./testdb --create</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ldb -h</span><br><span class="line">get</span><br><span class="line">put</span><br><span class="line">del</span><br><span class="line">列出key</span><br><span class="line">ls</span><br></pre></td></tr></table></figure><h2 id="总体架构"><a href="#总体架构" class="headerlink" title="总体架构"></a>总体架构</h2><img alt="60a2861e.png" src="/2021/12/11/%E5%8A%9F%E8%83%BD%E5%88%86%E7%B1%BB/%E6%95%B0%E6%8D%AE%E5%BA%93/levelDB%E6%8E%A5%E8%A7%A6/60a2861e.png" width height><h2 id="put-操作"><a href="#put-操作" class="headerlink" title="put 操作"></a>put 操作</h2><img alt="6d3bbdc0.png" src="/2021/12/11/%E5%8A%9F%E8%83%BD%E5%88%86%E7%B1%BB/%E6%95%B0%E6%8D%AE%E5%BA%93/levelDB%E6%8E%A5%E8%A7%A6/6d3bbdc0.png" width height><h2 id="log-格式"><a href="#log-格式" class="headerlink" title="log 格式"></a>log 格式</h2><img alt="82a2155f.png" src="/2021/12/11/%E5%8A%9F%E8%83%BD%E5%88%86%E7%B1%BB/%E6%95%B0%E6%8D%AE%E5%BA%93/levelDB%E6%8E%A5%E8%A7%A6/82a2155f.png" width height><h2 id="read"><a href="#read" class="headerlink" title="read"></a>read</h2><img alt="67ac73ac.png" src="/2021/12/11/%E5%8A%9F%E8%83%BD%E5%88%86%E7%B1%BB/%E6%95%B0%E6%8D%AE%E5%BA%93/levelDB%E6%8E%A5%E8%A7%A6/67ac73ac.png" width height>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://draveness.me/bigtable-leveldb&quot;&gt;参考&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://leveldb.org/&quot;&gt;官网&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/hxoht/ldb&quot;&gt;cli工具&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/syndtr/goleveldb&quot;&gt;go impl&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;leveldb是什么&quot;&gt;&lt;a href=&quot;#leveldb是什么&quot; class=&quot;headerlink&quot; title=&quot;leveldb是什么&quot;&gt;&lt;/a&gt;leveldb是什么&lt;/h2&gt;&lt;p&gt;一个单机的 Key,Value 数据库，适合写多读少，支持持久化，支持故障恢复，支持二进制数据&lt;br&gt;LevelDb是能够处理十亿级别规模Key-Value型数据持久性存储的C++ 程序库&lt;br&gt;官方网站报道其随机写性能达到40万条记录每秒，而随机读性能达到6万条记录每秒。&lt;br&gt;总体来说，LevelDb的写操作要大大快于读操作，而顺序读写操作则大大快于随机读写操作。&lt;/p&gt;
&lt;p&gt;样例接口&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;class DB &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; public:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  virtual Status Put(const WriteOptions&amp;amp; options, const Slice&amp;amp; key, const Slice&amp;amp; value) = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  virtual Status Delete(const WriteOptions&amp;amp; options, const Slice&amp;amp; key) = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  virtual Status Write(const WriteOptions&amp;amp; options, WriteBatch* updates) = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  virtual Status Get(const ReadOptions&amp;amp; options, const Slice&amp;amp; key, std::string* value) = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;记录几个概念，有需要在深入了解&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;memtable&lt;/li&gt;
&lt;li&gt;Imuable memtable（其实我跟1是亲兄弟啦）&lt;/li&gt;
&lt;li&gt;sstable&lt;/li&gt;
&lt;li&gt;log&lt;/li&gt;
&lt;li&gt;filter&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="数据库" scheme="http://zhengjun.top/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
  </entry>
  
  <entry>
    <title>英语基础语法-09副词</title>
    <link href="http://zhengjun.top/2021/12/11/%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E8%8B%B1%E8%AF%AD%E5%AD%A6%E4%B9%A0/%E8%8B%B1%E8%AF%AD%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95-09%E5%89%AF%E8%AF%8D/"/>
    <id>http://zhengjun.top/2021/12/11/%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E8%8B%B1%E8%AF%AD%E5%AD%A6%E4%B9%A0/%E8%8B%B1%E8%AF%AD%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95-09%E5%89%AF%E8%AF%8D/</id>
    <published>2021-12-11T12:58:22.747Z</published>
    <updated>2018-07-22T01:56:26.000Z</updated>
    
    <content type="html"><![CDATA[<p>副词Adverbes用来修饰动词，形容词或其他的副词。与形容词修饰名词类似。<br>修饰表示增加或修改一个词的含义。<br>副词告诉我们一个动作是如何发生的。例如：where, when or how it occurs。副词会让我们的演讲和写作更加有趣，更加精确，更加有价值。  </p><p>很多的副词都以’ly’结尾。<br>貌似副词的功能很多的说，需要重点掌握一下。  </p><span id="more"></span><p>简单的介绍一下种类，这里不细说。似乎有点吓人，这货简直无处不在。对于这样的词类一定要重点关照。  </p><ul><li>时间副词：now, then, soon, ago, recently, lately; An idea $\underline{suddenly}$ struck me.我心中忽然产生一个念头</li><li>地点副词：here, there, up, down, away, nearby, home;I am considering going $\underline{abroad}$.我正在考虑出国。</li><li>方式副词：quietly, heavily, warmly, carefully, happily;Look at the picture $\underline{carefully}$.仔细看这幅画</li><li>频度副词：always, usually, often, frequently, constantly, occasionally;Sometimes he gets up $\underline{early}$.他有时起得早</li><li>程度副词：fairly, pretty, rather, quite, very, much, too;The film was $\underline{quite}$ good.这个电影不错</li><li>焦点副词：就是通过强调使之成为人们注意的焦点的副词only, alone, also, even, just, merely, simply;$\underline{Only}$ Tom knows the answer.只有汤姆知道答案</li><li>连接副词：这类副词有相当于并列连词的therefore, besides, otherwise, however, moreover, furthermore;I don’t want to go out now, and $\underline{besides}$, I must work.我现在不想出去，而且我还得工作</li><li>关系副词：就是引导定语从句的when, where, why等；e.g. This is the factory where his father works.</li><li>疑问副词：就是用于引出特殊疑问句的when, where, why, how等；e.g. When will he be back?</li><li>句子副词：就是修饰整个句子，表达说话人的观点态度的副词，常见的有frankly, honestly, clearly, obviously, evidently；e.g. Frankly, I am not satisfied with your work.</li></ul><h2 id="副词可以为动词提供更多的信息。"><a href="#副词可以为动词提供更多的信息。" class="headerlink" title="副词可以为动词提供更多的信息。"></a>副词可以为动词提供更多的信息。</h2><ul><li>The fire engine runs $\underline{fast}$.</li><li>Listen to his speech $\underline{carefully}$.</li><li>I browse the web $\underline{frequently}$.</li><li>It rained $\underline{hard}$.</li></ul><h2 id="副词可以为形容词提供更多的信息"><a href="#副词可以为形容词提供更多的信息" class="headerlink" title="副词可以为形容词提供更多的信息"></a>副词可以为形容词提供更多的信息</h2><ul><li>The news is $\underline{very surprising}$!</li><li>The coffee is $\underline{extremely}$ hot, so be careful.</li><li>Nature is $\underline{really}$ amazing!</li></ul><h2 id="副词可以为其他副词提供更多的信息"><a href="#副词可以为其他副词提供更多的信息" class="headerlink" title="副词可以为其他副词提供更多的信息"></a>副词可以为其他副词提供更多的信息</h2><ul><li>It rains $\underline{very hard}$.</li><li>Computers run $\underline{much faster}$ these days.</li><li>I clean my room $\underline{less frequently}$ because I am busy.</li></ul><h2 id="通常形容词可以通过在尾部追加’ly’变成副词。"><a href="#通常形容词可以通过在尾部追加’ly’变成副词。" class="headerlink" title="通常形容词可以通过在尾部追加’ly’变成副词。"></a>通常形容词可以通过在尾部追加’ly’变成副词。</h2><ul><li>slow – slowly</li><li>quick – quickly</li><li>comfortable – comfortably</li><li>loud – loudly</li><li>clear – clearly</li></ul><p>对于以’y’结尾的形容词，把’y’变成’i’然后在添加’ly’</p><ul><li>happy – happily</li><li>easy – easily</li></ul><h2 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h2><p>选择正确的单词形式  </p><ol><li>I spoke to you (careful, carefully) last time.  </li><li>We talked about it (clear, clearly).  </li><li>I sat on the (comfortable, comfortably) sofa.  </li><li>My dog runs very (fast, faster).  </li><li>Let’s install the new program (quick, quickly).  </li></ol><p>答案：  </p><ol><li>carefully  </li><li>clearly  </li><li>comfortable  </li><li>fast  </li><li>quickly  </li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;副词Adverbes用来修饰动词，形容词或其他的副词。与形容词修饰名词类似。&lt;br&gt;修饰表示增加或修改一个词的含义。&lt;br&gt;副词告诉我们一个动作是如何发生的。例如：where, when or how it occurs。副词会让我们的演讲和写作更加有趣，更加精确，更加有价值。  &lt;/p&gt;
&lt;p&gt;很多的副词都以’ly’结尾。&lt;br&gt;貌似副词的功能很多的说，需要重点掌握一下。  &lt;/p&gt;</summary>
    
    
    
    <category term="学习" scheme="http://zhengjun.top/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="英语" scheme="http://zhengjun.top/tags/%E8%8B%B1%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>hexo的使用</title>
    <link href="http://zhengjun.top/2021/12/10/%E5%B7%A5%E5%85%B7%E7%B1%BB/hexo%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://zhengjun.top/2021/12/10/%E5%B7%A5%E5%85%B7%E7%B1%BB/hexo%E7%9A%84%E4%BD%BF%E7%94%A8/</id>
    <published>2021-12-10T05:37:21.000Z</published>
    <updated>2021-12-11T13:02:00.777Z</updated>
    
    <content type="html"><![CDATA[<h2 id="hexo-插件"><a href="#hexo-插件" class="headerlink" title="hexo 插件"></a>hexo 插件</h2><h3 id="next-主题"><a href="#next-主题" class="headerlink" title="next 主题"></a>next 主题</h3><p>新版的 8.8  提供了另一种安装方式</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 在网站根目录 blog 下面执行</span></span><br><span class="line">npm install hexo-theme-next</span><br></pre></td></tr></table></figure><h3 id="github-部署"><a href="#github-部署" class="headerlink" title="github 部署"></a>github 部署</h3><p>安装下面插件，配置完成后，还需要做些配置</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br><span class="line"></span><br><span class="line"><span class="comment">// 网站配置文件</span></span><br><span class="line"><span class="attr">deploy</span>:</span><br><span class="line">- type: git</span><br><span class="line">  <span class="attr">repo</span>: git@github.com:MeZhengJun/MeZhengJun.github.io.git</span><br><span class="line">  <span class="attr">branch</span>: master</span><br><span class="line">  <span class="attr">name</span>: MeZhengJun</span><br><span class="line">  <span class="attr">email</span>: aslucky1977@gmail.com</span><br></pre></td></tr></table></figure><span id="more"></span><h3 id="阅读时间和字数"><a href="#阅读时间和字数" class="headerlink" title="阅读时间和字数"></a>阅读时间和字数</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">npm install hexo-symbols-count-time --save</span><br><span class="line">npm i hexo-wordcount --save</span><br><span class="line"></span><br><span class="line"><span class="attr">symbols_count_time</span>:</span><br><span class="line">  separated_meta: <span class="literal">true</span></span><br><span class="line">  <span class="attr">item_text_post</span>: <span class="literal">true</span></span><br><span class="line">  <span class="attr">item_text_total</span>: <span class="literal">false</span></span><br><span class="line">  <span class="attr">symbols</span>: <span class="literal">true</span></span><br><span class="line">  <span class="attr">time</span>: <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_symbols</span>: <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_time</span>: <span class="literal">true</span></span><br><span class="line">  <span class="attr">exclude_codeblock</span>: <span class="literal">false</span></span><br><span class="line">  <span class="attr">awl</span>: <span class="number">4</span></span><br><span class="line">  <span class="attr">wpm</span>: <span class="number">275</span></span><br><span class="line">  <span class="attr">suffix</span>: <span class="string">&quot;mins.&quot;</span></span><br></pre></td></tr></table></figure><h2 id="在顶部增加一个阅读进度条"><a href="#在顶部增加一个阅读进度条" class="headerlink" title="在顶部增加一个阅读进度条"></a>在顶部增加一个阅读进度条</h2><p><a href="https://github.com/theme-next/theme-next-reading-progress">reading_progress</a></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"># Reading progress bar</span><br><span class="line"><span class="attr">reading_progress</span>:</span><br><span class="line">  enable: <span class="literal">true</span></span><br><span class="line">  # Available values: top | bottom</span><br><span class="line">  <span class="attr">position</span>: top</span><br><span class="line">  <span class="attr">color</span>: <span class="string">&quot;#6666FF&quot;</span></span><br><span class="line">  <span class="attr">height</span>: 3px</span><br></pre></td></tr></table></figure><h2 id="阅读进度百分比"><a href="#阅读进度百分比" class="headerlink" title="阅读进度百分比"></a>阅读进度百分比</h2><p><a href="https://github.com/HubSpot/pace">pace</a></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">pace:</span><br><span class="line">    enable: <span class="literal">true</span></span><br><span class="line">    # Themes list:</span><br><span class="line">    # big-counter | bounce | barber-shop | center-atom | center-circle | center-radar | center-simple</span><br><span class="line">    # corner-indicator | fill-left | flat-top | flash | loading-bar | mac-osx | material | minimal</span><br><span class="line">    <span class="attr">theme</span>: minimal</span><br></pre></td></tr></table></figure><h2 id="评论插件"><a href="#评论插件" class="headerlink" title="评论插件"></a>评论插件</h2><p>为 Next 主题添加 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 支持</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;hexo-插件&quot;&gt;&lt;a href=&quot;#hexo-插件&quot; class=&quot;headerlink&quot; title=&quot;hexo 插件&quot;&gt;&lt;/a&gt;hexo 插件&lt;/h2&gt;&lt;h3 id=&quot;next-主题&quot;&gt;&lt;a href=&quot;#next-主题&quot; class=&quot;headerlink&quot; title=&quot;next 主题&quot;&gt;&lt;/a&gt;next 主题&lt;/h3&gt;&lt;p&gt;新版的 8.8  提供了另一种安装方式&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 在网站根目录 blog 下面执行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm install hexo-theme-next&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;github-部署&quot;&gt;&lt;a href=&quot;#github-部署&quot; class=&quot;headerlink&quot; title=&quot;github 部署&quot;&gt;&lt;/a&gt;github 部署&lt;/h3&gt;&lt;p&gt;安装下面插件，配置完成后，还需要做些配置&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install hexo-deployer-git --save&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 网站配置文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;deploy&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- type: git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;repo&lt;/span&gt;: git@github.com:MeZhengJun/MeZhengJun.github.io.git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;branch&lt;/span&gt;: master&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;: MeZhengJun&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;email&lt;/span&gt;: aslucky1977@gmail.com&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>embedded-phy</title>
    <link href="http://zhengjun.top/2021/12/03/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%B5%8C%E5%85%A5%E5%BC%8F/embedded-phy/"/>
    <id>http://zhengjun.top/2021/12/03/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%B5%8C%E5%85%A5%E5%BC%8F/embedded-phy/</id>
    <published>2021-12-03T03:01:29.000Z</published>
    <updated>2021-12-06T06:28:05.614Z</updated>
    
    <content type="html"><![CDATA[<p>驱动调试<br>首先确认 Configuration Strapping Pins 这个是配置硬件接口方式的地方。<br>是芯片上电/复位后的默认配置过程，使得PHY芯片在上电/复位结束后能进入期望的工作状态，比如芯片的PHY地址，传输线路速率，是否速率自动协商，双工模式等。</p><p>ping 命令数据流向是 cpu 处理命令，通过 CPU 的 GMAC 口发出去，可以看 PHY 端 RGMII 口 MIB 的 ifOutOctets 计数器（发出多少字节），然后在通过 PHY 的 RGMII 接口交给 PHY 通过 PHY 的 UTP 口发出去，可以看 UTP 口MIB 的 ifOutOctets 计数器（发出多少字节）。</p><p>需要注意的地方就是当 ping 不通时，先确认 cpu 端的 GMAC 配置要和 phy 端的 mac 口配置保持一致，比如：都是1000M或者都是100M，然后去掉中间环节，直连电脑和板子，避免因为路由的原因导致不通。</p><img alt="20211206_141918.png" src="/2021/12/03/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%B5%8C%E5%85%A5%E5%BC%8F/embedded-phy/20211206_141918.png" width="500" height><span id="more"></span><p>首先调试检查硬件，再调试软件<br>仔细阅读phy和主芯片datesheet ，尤其着重阅读mii寄存器，它是mac和phy交换信息的媒介。<br>硬件注意：关于phy的芯片需要注意的有几点：</p><ol><li>mdio接口和rgmii或者mii接口是否正确。</li><li>电源是否稳定，晶振是否起振并且频率匹配。</li><li>phy地址的配置是否正确。</li><li>PHY是否有延时电阻（RTL8211有）</li><li>phy芯片输出时钟是否正确。(速率1000M clk 125M，100M clk 25M，10M clk 2.5M)</li><li>phy和主芯片rgmii接口电平是否匹配。</li><li>phy间的线序是否正确以及线路是否完好。</li><li>mac和phy间的数据速率是否匹配即都是千兆百兆或10兆。<br>关于主芯片mac部分接口注意：</li><li>rgmii或者mii以及mdio接口是否正确。</li><li>mdio时序是否正确。</li><li>rgmii时钟是否正确。</li></ol><p>二、软件确认<br>1、uboot涉及驱动：drivers/net/higmacv300，PHY配置驱动：drivers/net/phy/realtek.c<br>2、先看mdio能否扫描到phy，读出的phy id要和phy datasheet一致；同时，读出phyid的addr需要和上面硬件的phy_add一致<br>3、如果第二步是正确的，那么说明mdio接口和phy已经工作；接下来要检查rgmii接口<br>4、将板子和笔记本直连：GMAC&lt;—&gt;phy&lt;—&gt;pc<br>板子ping PC 以及PC ping板子，然后读GMAC和phy的寄存器（读GMAC要自己写，读phy有个mii命令）<br>可以查看GMAC收发了多少数据，PHY收发了多少数据，从而判断是GMAC发给PHY异常还是PHY发给PC异常，或GMAC接收异常还是PHY接收异常<br>查看 phy 的 0 4 9 寄存器是否正确<br>5、到这一步还是不行，就需要自己写回环测试代码：<br>第一个是GMAC回环：MAC_IF_STAT_CTRL寄存器<br>第二个PHY回环：BMCR寄存器<br>6、uboot遇到时通时不通时，将uboot强制成100M速率试试<br>千兆ping不通时：<br>看一下rgmii的clock出来没有<br>外面发播报进来data上有没有波形<br>如果有波形，再调一下rgmii delay试一下</p><h2 id="MDIO驱动"><a href="#MDIO驱动" class="headerlink" title="MDIO驱动"></a>MDIO驱动</h2><p>使用 RTL8363NB 举例</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 首先定义宏打开 MDIO 配置</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MDC_MDIO_OPERATION</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 实现相关接口</span></span><br><span class="line"><span class="comment">/* MDC/MDIO, redefine/implement the following Macro */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MDC_MDIO_WRITE(preamableLength, phyID, regID, data)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MDC_MDIO_READ(preamableLength, phyID, regID, pData)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">rtlglue_drvMutexLock</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">/* It is empty currently. Implement this function if Lock/Unlock function is needed */</span></span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">rtlglue_drvMutexUnlock</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">/* It is empty currently. Implement this function if Lock/Unlock function is needed */</span></span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="MIB信息"><a href="#MIB信息" class="headerlink" title="MIB信息"></a>MIB信息</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// send ping and get MIB info</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">ifInOctets COUNTER</span></span><br><span class="line"><span class="comment">The total number of octets received on the interface,</span></span><br><span class="line"><span class="comment">including framing characters.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Discontinuities in the value of this counter can occur at</span></span><br><span class="line"><span class="comment">re-initialization of the management system, and at other</span></span><br><span class="line"><span class="comment">times as indicated by the value of</span></span><br><span class="line"><span class="comment">ifCounterDiscontinuityTime.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">ifInOctets 是 0 ， 说明 RGMII 没收到，不同的rxdelay都读看看，看一下port16的ifInOctets有没有计数</span></span><br><span class="line"><span class="comment">如果都不行，看一下cpu能不能加txdelay再看看</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">ifOutOctets COUNTER</span></span><br><span class="line"><span class="comment">The total number of octets transmitted out of the</span></span><br><span class="line"><span class="comment">interface, including framing characters.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Discontinuities in the value of this counter can occur at</span></span><br><span class="line"><span class="comment">re-initialization of the management system, and at other</span></span><br><span class="line"><span class="comment">times as indicated by the value of</span></span><br><span class="line"><span class="comment">ifCounterDiscontinuityTime.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ping_mib</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> *APIMIBString[] =</span><br><span class="line">    &#123;</span><br><span class="line">                    <span class="string">&quot;ifInOctets&quot;</span>,</span><br><span class="line"></span><br><span class="line">                    <span class="string">&quot;dot3StatsFCSErrors&quot;</span>,</span><br><span class="line"></span><br><span class="line">                    <span class="string">&quot;dot3StatsSymbolErrors&quot;</span>,</span><br><span class="line"></span><br><span class="line">                    <span class="string">&quot;dot3InPauseFrames&quot;</span>,</span><br><span class="line"></span><br><span class="line">                    <span class="string">&quot;dot3ControlInUnknownOpcodes&quot;</span>,</span><br><span class="line"></span><br><span class="line">                    <span class="string">&quot;etherStatsFragments&quot;</span>,</span><br><span class="line"></span><br><span class="line">                    <span class="string">&quot;etherStatsJabbers&quot;</span>,</span><br><span class="line"></span><br><span class="line">                    <span class="string">&quot;ifInUcastPkts&quot;</span>,</span><br><span class="line"></span><br><span class="line">                    <span class="string">&quot;etherStatsDropEvents&quot;</span>,</span><br><span class="line"></span><br><span class="line">                    <span class="string">&quot;etherStatsOctets&quot;</span>,</span><br><span class="line"></span><br><span class="line">                    <span class="string">&quot;etherStatsUndersizePkts&quot;</span>,</span><br><span class="line"></span><br><span class="line">                    <span class="string">&quot;etherOversizeStats&quot;</span>,</span><br><span class="line"></span><br><span class="line">                    <span class="string">&quot;etherStatsPkts64Octets&quot;</span>,</span><br><span class="line"></span><br><span class="line">                    <span class="string">&quot;etherStatsPkts65to127Octets&quot;</span>,</span><br><span class="line"></span><br><span class="line">                    <span class="string">&quot;etherStatsPkts128to255Octets&quot;</span>,</span><br><span class="line"></span><br><span class="line">                    <span class="string">&quot;etherStatsPkts256to511Octets&quot;</span>,</span><br><span class="line"></span><br><span class="line">                    <span class="string">&quot;etherStatsPkts512to1023Octets&quot;</span>,</span><br><span class="line"></span><br><span class="line">                    <span class="string">&quot;etherStatsPkts1024to1518Octets&quot;</span>,</span><br><span class="line"></span><br><span class="line">                    <span class="string">&quot;etherStatsMulticastPkts&quot;</span>,</span><br><span class="line"></span><br><span class="line">                    <span class="string">&quot;etherStatsBroadcastPkts&quot;</span>,</span><br><span class="line"></span><br><span class="line">                    <span class="string">&quot;ifOutOctets&quot;</span>,</span><br><span class="line"></span><br><span class="line">                    <span class="string">&quot;dot3StatsSingleCollisionFrames&quot;</span>,</span><br><span class="line"></span><br><span class="line">                    <span class="string">&quot;dot3StatsMultipleCollisionFrames&quot;</span>,</span><br><span class="line"></span><br><span class="line">                    <span class="string">&quot;dot3StatsDeferredTransmissions&quot;</span>,</span><br><span class="line"></span><br><span class="line">                    <span class="string">&quot;dot3StatsLateCollisions&quot;</span>,</span><br><span class="line"></span><br><span class="line">                    <span class="string">&quot;etherStatsCollisions&quot;</span>,</span><br><span class="line"></span><br><span class="line">                   <span class="string">&quot;dot3StatsExcessiveCollisions&quot;</span>,</span><br><span class="line"></span><br><span class="line">                    <span class="string">&quot;dot3OutPauseFrames&quot;</span>,</span><br><span class="line"></span><br><span class="line">                    <span class="string">&quot;dot1dBasePortDelayExceededDiscards&quot;</span>,</span><br><span class="line"></span><br><span class="line">                    <span class="string">&quot;dot1dTpPortInDiscards&quot;</span>,</span><br><span class="line"></span><br><span class="line">                    <span class="string">&quot;ifOutUcastPkts&quot;</span>,</span><br><span class="line"></span><br><span class="line">                    <span class="string">&quot;ifOutMulticastPkts&quot;</span>,</span><br><span class="line"></span><br><span class="line">                    <span class="string">&quot;ifOutBroadcastPkts&quot;</span>,</span><br><span class="line"></span><br><span class="line">                    <span class="string">&quot;outOampduPkts&quot;</span>,</span><br><span class="line"></span><br><span class="line">                    <span class="string">&quot;inOampduPkts&quot;</span>,</span><br><span class="line"></span><br><span class="line">                    <span class="string">&quot;pktgenPkts&quot;</span>,</span><br><span class="line"></span><br><span class="line">                    <span class="string">&quot;inMldChecksumError&quot;</span>,</span><br><span class="line"></span><br><span class="line">                    <span class="string">&quot;inIgmpChecksumError&quot;</span>,</span><br><span class="line"></span><br><span class="line">                    <span class="string">&quot;inMldSpecificQuery&quot;</span>,</span><br><span class="line"></span><br><span class="line">                    <span class="string">&quot;inMldGeneralQuery&quot;</span>,</span><br><span class="line"></span><br><span class="line">                    <span class="string">&quot;inIgmpSpecificQuery&quot;</span>,</span><br><span class="line"></span><br><span class="line">                    <span class="string">&quot;inIgmpGeneralQuery&quot;</span>,</span><br><span class="line"></span><br><span class="line">                    <span class="string">&quot;inMldLeaves&quot;</span>,</span><br><span class="line"></span><br><span class="line">                    <span class="string">&quot;inIgmpInterfaceLeaves&quot;</span>,</span><br><span class="line"></span><br><span class="line">                    <span class="string">&quot;inIgmpJoinsSuccess&quot;</span>,</span><br><span class="line"></span><br><span class="line">                    <span class="string">&quot;inIgmpJoinsFail&quot;</span>,</span><br><span class="line"></span><br><span class="line">                    <span class="string">&quot;inMldJoinsSuccess&quot;</span>,</span><br><span class="line"></span><br><span class="line">                    <span class="string">&quot;inMldJoinsFail&quot;</span>,</span><br><span class="line"></span><br><span class="line">                    <span class="string">&quot;inReportSuppressionDrop&quot;</span>,</span><br><span class="line"></span><br><span class="line">                    <span class="string">&quot;inLeaveSuppressionDrop&quot;</span>,</span><br><span class="line"></span><br><span class="line">                    <span class="string">&quot;outIgmpReports&quot;</span>,</span><br><span class="line"></span><br><span class="line">                    <span class="string">&quot;outIgmpLeaves&quot;</span>,</span><br><span class="line"></span><br><span class="line">                    <span class="string">&quot;outIgmpGeneralQuery&quot;</span>,</span><br><span class="line"></span><br><span class="line">                    <span class="string">&quot;outIgmpSpecificQuery&quot;</span>,</span><br><span class="line"></span><br><span class="line">                    <span class="string">&quot;outMldReports&quot;</span>,</span><br><span class="line"></span><br><span class="line">                    <span class="string">&quot;outMldLeaves&quot;</span>,</span><br><span class="line"></span><br><span class="line">                    <span class="string">&quot;outMldGeneralQuery&quot;</span>,</span><br><span class="line"></span><br><span class="line">                    <span class="string">&quot;outMldSpecificQuery&quot;</span>,</span><br><span class="line"></span><br><span class="line">                    <span class="string">&quot;inKnownMulticastPkts&quot;</span>,</span><br><span class="line"></span><br><span class="line">                    <span class="string">&quot;ifInMulticastPkts&quot;</span>,</span><br><span class="line"></span><br><span class="line">                    <span class="string">&quot;ifInBroadcastPkts&quot;</span></span><br><span class="line"></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> * strtmpArr[] =&#123;<span class="string">&quot;ping&quot;</span>,<span class="string">&quot;192.168.0.107&quot;</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;before rtk_stat_global_reset... \n&quot;</span>);</span><br><span class="line"><span class="keyword">rtk_api_ret_t</span> retVal = rtk_stat_global_reset();</span><br><span class="line"><span class="keyword">if</span> ( RT_ERR_OK != retVal )</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;rtk_stat_global_reset failed.retVal=%x ===================== \n\n&quot;</span>,retVal);</span><br><span class="line">&#125;<span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;read gmac register before after ping STMMAC_GMACADDR=%x============= \n&quot;</span>,STMMAC_GMACADDR);</span><br><span class="line">retVal = HW_REG(STMMAC_GMACADDR);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;GMACN_CTRL_REG =%x\n&quot;</span>,retVal);</span><br><span class="line">retVal = HW_REG(STMMAC_GMACADDR+ <span class="number">0x1014</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;DMAP_STATUS=%x\n&quot;</span>,retVal);</span><br><span class="line">retVal = HW_REG(STMMAC_GMACADDR+ <span class="number">0x10C4</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;GMACN_MMC_RXUNICASTFRAMES_G=%x\n&quot;</span>,retVal);</span><br><span class="line">retVal = HW_REG(STMMAC_GMACADDR+ <span class="number">0x016C</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;GMACN_MMC_TXEXCESSDEF =%x\n&quot;</span>,retVal);</span><br><span class="line">retVal = HW_REG(STMMAC_GMACADDR+ <span class="number">0x0168</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;GMACN_MMC_TXFRAMECOUNT_G  =%x\n&quot;</span>,retVal);</span><br><span class="line">retVal = HW_REG(STMMAC_GMACADDR+ <span class="number">0x0010</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;GMACN_GMII_ADDR  =%x\n&quot;</span>,retVal);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> reg = HW_REG(<span class="number">0x20030000</span> + <span class="number">0xec</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;PERI_CRG59 + 0xec,reg=%x ========= \n&quot;</span>,reg);</span><br><span class="line">reg = HW_REG(<span class="number">0x20030000</span> + <span class="number">0x00F0</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;PERI_CRG60 0xF0,reg=%x ========= \n&quot;</span>,reg);</span><br><span class="line">reg = HW_REG(<span class="number">0x20050000</span> + <span class="number">0x00E8</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;PERIPHCTRL45 0xE8,reg=%x ========= \n&quot;</span>,reg);</span><br><span class="line"></span><br><span class="line"><span class="keyword">cmd_tbl_t</span> ctt;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (;i&lt; <span class="number">1</span>;++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;before ping ...i=%x \n&quot;</span>,i);</span><br><span class="line">do_ping(&amp;ctt,<span class="number">0</span>,<span class="number">2</span>,strtmpArr);</span><br><span class="line">msleep (<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> port = UTP_PORT3;</span><br><span class="line"><span class="keyword">rtk_stat_port_cntr_t</span> portCntrs;</span><br><span class="line"><span class="keyword">int</span> portArr[] = &#123;UTP_PORT3,EXT_PORT0&#125;;</span><br><span class="line">i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (;i&lt;<span class="number">2</span>;++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">memset</span>(&amp;portCntrs,<span class="number">0</span>,<span class="keyword">sizeof</span>(<span class="keyword">rtk_stat_port_cntr_t</span>));</span><br><span class="line">port = portArr[i];</span><br><span class="line">retVal = rtk_stat_port_getAll(port, &amp;portCntrs);</span><br><span class="line"><span class="keyword">if</span>(RT_ERR_OK != retVal)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;rtk_stat_port_getAll failed.retVal=%x ===================== \n\n&quot;</span>,retVal);</span><br><span class="line">&#125;<span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\nport %d: %-35s[%02d]:  %25lld&quot;</span>,port,APIMIBString[<span class="number">0</span>],<span class="number">0</span>,portCntrs.ifInOctets);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\nport %d: %-35s[%02d]:  %25lld&quot;</span>,port,APIMIBString[<span class="number">1</span>],<span class="number">1</span>,portCntrs.dot3StatsFCSErrors);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\nport %d: %-35s[%02d]:  %25lld&quot;</span>,port,APIMIBString[<span class="number">2</span>],<span class="number">2</span>,portCntrs.dot3StatsSymbolErrors);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\nport %d: %-35s[%02d]:  %25lld&quot;</span>,port,APIMIBString[<span class="number">3</span>],<span class="number">3</span>,portCntrs.dot3InPauseFrames);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\nport %d: %-35s[%02d]:  %25lld&quot;</span>,port,APIMIBString[<span class="number">4</span>],<span class="number">4</span>,portCntrs.dot3ControlInUnknownOpcodes);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\nport %d: %-35s[%02d]:  %25lld&quot;</span>,port,APIMIBString[<span class="number">5</span>],<span class="number">5</span>,portCntrs.etherStatsFragments);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\nport %d: %-35s[%02d]:  %25lld&quot;</span>,port,APIMIBString[<span class="number">6</span>],<span class="number">6</span>,portCntrs.etherStatsJabbers);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\nport %d: %-35s[%02d]:  %25lld&quot;</span>,port,APIMIBString[<span class="number">7</span>],<span class="number">7</span>,portCntrs.ifInUcastPkts);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\nport %d: %-35s[%02d]:  %25lld&quot;</span>,port,APIMIBString[<span class="number">8</span>],<span class="number">8</span>,portCntrs.etherStatsDropEvents);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\nport %d: %-35s[%02d]:  %25lld&quot;</span>,port,APIMIBString[<span class="number">9</span>],<span class="number">9</span>,portCntrs.etherStatsOctets);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\nport %d: %-35s[%02d]:  %25lld&quot;</span>,port,APIMIBString[<span class="number">10</span>],<span class="number">10</span>,portCntrs.etherStatsUndersizePkts);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\nport %d: %-35s[%02d]:  %25lld&quot;</span>,port,APIMIBString[<span class="number">11</span>],<span class="number">11</span>,portCntrs.etherStatsOversizePkts);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\nport %d: %-35s[%02d]:  %25lld&quot;</span>,port,APIMIBString[<span class="number">12</span>],<span class="number">12</span>,portCntrs.etherStatsPkts64Octets);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\nport %d: %-35s[%02d]:  %25lld&quot;</span>,port,APIMIBString[<span class="number">13</span>],<span class="number">13</span>,portCntrs.etherStatsPkts65to127Octets);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\nport %d: %-35s[%02d]:  %25lld&quot;</span>,port,APIMIBString[<span class="number">14</span>],<span class="number">14</span>,portCntrs.etherStatsPkts128to255Octets);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\nport %d: %-35s[%02d]:  %25lld&quot;</span>,port,APIMIBString[<span class="number">15</span>],<span class="number">15</span>,portCntrs.etherStatsPkts256to511Octets);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\nport %d: %-35s[%02d]:  %25lld&quot;</span>,port,APIMIBString[<span class="number">16</span>],<span class="number">16</span>,portCntrs.etherStatsPkts512to1023Octets);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\nport %d: %-35s[%02d]:  %25lld&quot;</span>,port,APIMIBString[<span class="number">17</span>],<span class="number">17</span>,portCntrs.etherStatsPkts1024toMaxOctets);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\nport %d: %-35s[%02d]:  %25lld&quot;</span>,port,APIMIBString[<span class="number">18</span>],<span class="number">18</span>,portCntrs.etherStatsMcastPkts);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\nport %d: %-35s[%02d]:  %25lld&quot;</span>,port,APIMIBString[<span class="number">19</span>],<span class="number">19</span>,portCntrs.etherStatsBcastPkts);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\nport %d: %-35s[%02d]:  %25lld&quot;</span>,port,APIMIBString[<span class="number">20</span>],<span class="number">20</span>,portCntrs.ifOutOctets);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\nport %d: %-35s[%02d]:  %25lld&quot;</span>,port,APIMIBString[<span class="number">21</span>],<span class="number">21</span>,portCntrs.dot3StatsSingleCollisionFrames);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\nport %d: %-35s[%02d]:  %25lld&quot;</span>,port,APIMIBString[<span class="number">22</span>],<span class="number">22</span>,portCntrs.dot3StatsMultipleCollisionFrames);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\nport %d: %-35s[%02d]:  %25lld&quot;</span>,port,APIMIBString[<span class="number">23</span>],<span class="number">23</span>,portCntrs.dot3StatsDeferredTransmissions);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\nport %d: %-35s[%02d]:  %25lld&quot;</span>,port,APIMIBString[<span class="number">24</span>],<span class="number">24</span>,portCntrs.dot3StatsLateCollisions);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\nport %d: %-35s[%02d]:  %25lld&quot;</span>,port,APIMIBString[<span class="number">25</span>],<span class="number">25</span>,portCntrs.etherStatsCollisions);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\nport %d: %-35s[%02d]:  %25lld&quot;</span>,port,APIMIBString[<span class="number">26</span>],<span class="number">26</span>,portCntrs.dot3StatsExcessiveCollisions);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\nport %d: %-35s[%02d]:  %25lld&quot;</span>,port,APIMIBString[<span class="number">27</span>],<span class="number">27</span>,portCntrs.dot3OutPauseFrames);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\nport %d: %-35s[%02d]:  %25lld&quot;</span>,port,APIMIBString[<span class="number">28</span>],<span class="number">28</span>,portCntrs.dot1dBasePortDelayExceededDiscards);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\nport %d: %-35s[%02d]:  %25lld&quot;</span>,port,APIMIBString[<span class="number">29</span>],<span class="number">29</span>,portCntrs.dot1dTpPortInDiscards);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\nport %d: %-35s[%02d]:  %25lld&quot;</span>,port,APIMIBString[<span class="number">30</span>],<span class="number">30</span>,portCntrs.ifOutUcastPkts);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\nport %d: %-35s[%02d]:  %25lld&quot;</span>,port,APIMIBString[<span class="number">31</span>],<span class="number">31</span>,portCntrs.ifOutMulticastPkts);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\nport %d: %-35s[%02d]:  %25lld&quot;</span>,port,APIMIBString[<span class="number">32</span>],<span class="number">32</span>,portCntrs.ifOutBrocastPkts);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\nport %d: %-35s[%02d]:  %25lld&quot;</span>,port,APIMIBString[<span class="number">33</span>],<span class="number">33</span>,portCntrs.outOampduPkts);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\nport %d: %-35s[%02d]:  %25lld&quot;</span>,port,APIMIBString[<span class="number">34</span>],<span class="number">34</span>,portCntrs.inOampduPkts);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\nport %d: %-35s[%02d]:  %25lld&quot;</span>,port,APIMIBString[<span class="number">35</span>],<span class="number">35</span>,portCntrs.pktgenPkts);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\nport %d: %-35s[%02d]:  %25lld&quot;</span>,port,APIMIBString[<span class="number">36</span>],<span class="number">36</span>,portCntrs.inMldChecksumError);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\nport %d: %-35s[%02d]:  %25lld&quot;</span>,port,APIMIBString[<span class="number">37</span>],<span class="number">37</span>,portCntrs.inIgmpChecksumError);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\nport %d: %-35s[%02d]:  %25lld&quot;</span>,port,APIMIBString[<span class="number">38</span>],<span class="number">38</span>,portCntrs.inMldSpecificQuery);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\nport %d: %-35s[%02d]:  %25lld&quot;</span>,port,APIMIBString[<span class="number">39</span>],<span class="number">39</span>,portCntrs.inMldGeneralQuery);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\nport %d: %-35s[%02d]:  %25lld&quot;</span>,port,APIMIBString[<span class="number">40</span>],<span class="number">40</span>,portCntrs.inIgmpSpecificQuery);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\nport %d: %-35s[%02d]:  %25lld&quot;</span>,port,APIMIBString[<span class="number">41</span>],<span class="number">41</span>,portCntrs.inIgmpGeneralQuery);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\nport %d: %-35s[%02d]:  %25lld&quot;</span>,port,APIMIBString[<span class="number">42</span>],<span class="number">42</span>,portCntrs.inMldLeaves);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\nport %d: %-35s[%02d]:  %25lld&quot;</span>,port,APIMIBString[<span class="number">43</span>],<span class="number">43</span>,portCntrs.inIgmpLeaves);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\nport %d: %-35s[%02d]:  %25lld&quot;</span>,port,APIMIBString[<span class="number">44</span>],<span class="number">44</span>,portCntrs.inIgmpJoinsSuccess);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\nport %d: %-35s[%02d]:  %25lld&quot;</span>,port,APIMIBString[<span class="number">45</span>],<span class="number">45</span>,portCntrs.inIgmpJoinsFail);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\nport %d: %-35s[%02d]:  %25lld&quot;</span>,port,APIMIBString[<span class="number">46</span>],<span class="number">46</span>,portCntrs.inMldJoinsSuccess);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\nport %d: %-35s[%02d]:  %25lld&quot;</span>,port,APIMIBString[<span class="number">47</span>],<span class="number">47</span>,portCntrs.inMldJoinsFail);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\nport %d: %-35s[%02d]:  %25lld&quot;</span>,port,APIMIBString[<span class="number">48</span>],<span class="number">48</span>,portCntrs.inReportSuppressionDrop);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\nport %d: %-35s[%02d]:  %25lld&quot;</span>,port,APIMIBString[<span class="number">49</span>],<span class="number">49</span>,portCntrs.inLeaveSuppressionDrop);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\nport %d: %-35s[%02d]:  %25lld&quot;</span>,port,APIMIBString[<span class="number">50</span>],<span class="number">50</span>,portCntrs.outIgmpReports);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\nport %d: %-35s[%02d]:  %25lld&quot;</span>,port,APIMIBString[<span class="number">51</span>],<span class="number">51</span>,portCntrs.outIgmpLeaves);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\nport %d: %-35s[%02d]:  %25lld&quot;</span>,port,APIMIBString[<span class="number">52</span>],<span class="number">52</span>,portCntrs.outIgmpGeneralQuery);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\nport %d: %-35s[%02d]:  %25lld&quot;</span>,port,APIMIBString[<span class="number">53</span>],<span class="number">53</span>,portCntrs.outIgmpSpecificQuery);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\nport %d: %-35s[%02d]:  %25lld&quot;</span>,port,APIMIBString[<span class="number">54</span>],<span class="number">54</span>,portCntrs.outMldReports);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\nport %d: %-35s[%02d]:  %25lld&quot;</span>,port,APIMIBString[<span class="number">55</span>],<span class="number">55</span>,portCntrs.outMldLeaves);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\nport %d: %-35s[%02d]:  %25lld&quot;</span>,port,APIMIBString[<span class="number">56</span>],<span class="number">56</span>,portCntrs.outMldGeneralQuery);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\nport %d: %-35s[%02d]:  %25lld&quot;</span>,port,APIMIBString[<span class="number">57</span>],<span class="number">57</span>,portCntrs.outMldSpecificQuery);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\nport %d: %-35s[%02d]:  %25lld&quot;</span>,port,APIMIBString[<span class="number">58</span>],<span class="number">58</span>,portCntrs.inKnownMulticastPkts);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\nport %d: %-35s[%02d]:  %25lld&quot;</span>,port,APIMIBString[<span class="number">59</span>],<span class="number">59</span>,portCntrs.ifInMulticastPkts);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\nport %d: %-35s[%02d]:  %25lld&quot;</span>,port,APIMIBString[<span class="number">60</span>],<span class="number">60</span>,portCntrs.ifInBroadcastPkts);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;read gmac register after ping STMMAC_GMACADDR=%x============= \n&quot;</span>,STMMAC_GMACADDR);</span><br><span class="line">retVal = HW_REG(STMMAC_GMACADDR);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;GMACN_CTRL_REG =%x\n&quot;</span>,retVal);</span><br><span class="line">retVal = HW_REG(STMMAC_GMACADDR+ <span class="number">0x1014</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;DMAP_STATUS=%x\n&quot;</span>,retVal);</span><br><span class="line">retVal = HW_REG(STMMAC_GMACADDR+ <span class="number">0x10C4</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;GMACN_MMC_RXUNICASTFRAMES_G=%x\n&quot;</span>,retVal);</span><br><span class="line">retVal = HW_REG(STMMAC_GMACADDR+ <span class="number">0x016C</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;GMACN_MMC_TXEXCESSDEF =%x\n&quot;</span>,retVal);</span><br><span class="line">retVal = HW_REG(STMMAC_GMACADDR+ <span class="number">0x0168</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;GMACN_MMC_TXFRAMECOUNT_G  =%x\n&quot;</span>,retVal);</span><br><span class="line"></span><br><span class="line">reg = HW_REG(<span class="number">0x20030000</span> + <span class="number">0xec</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;PERI_CRG59 + 0xec,reg=%x ========= \n&quot;</span>,reg);</span><br><span class="line">reg = HW_REG(<span class="number">0x20030000</span> + <span class="number">0x00F0</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;PERI_CRG60 0xF0,reg=%x ========= \n&quot;</span>,reg);</span><br><span class="line">reg = HW_REG(<span class="number">0x20050000</span> + <span class="number">0x00E8</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;PERIPHCTRL45 0xE8,reg=%x ========= \n&quot;</span>,reg);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="loopback-环回测试"><a href="#loopback-环回测试" class="headerlink" title="loopback 环回测试"></a>loopback 环回测试</h2><p>Loopback：Loopback是一个调试以及故障诊断中常用的功能，Bit14置1之后，PHY和外部MDI的连接在逻辑上将被断开，从MAC经过MII/GMII（也可能是其他的MAC/PHY接口）发送过来的数据将不会被发送到MDI上，而是在PHY内部（一般在PCS）回环到本端口的MII/GMII接收通道上，通过Loopback功能可以检查MII/GMII以及PHY接口部分是否工作正常，对于端口不通的情况可用于故障定位。需要注意的是，很多时候PHY设置Loopback后端口可能就Link down了，MAC无法向该端口发帧，这时就需要通过设置端口Force Link up才能使用Loopback功能。</p><p>本地回环测试就是ping本身的ip地址，这样数据就会接收回来</p><p>Loopback操作在PCS子层完成，两个方向的Loopback，如下图所示。<br>● 第一种模式，从MAC经过RGMII发送的帧到达PCS后被Loopback到RGMII的接收通道再送回给MAC（这种模式就是上面所描述的寄存器0 Loopback位控制的Loopback模式）<br>● 另一种模式，从MDI接收上来的帧到达PCS后被Loopback到MDI的发送通道，这种Loopback模式在IEEE802.3中并没有要求，但是目前常见的PHY都支持该功能</p><img alt="20211206_142353.png" src="/2021/12/03/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%B5%8C%E5%85%A5%E5%BC%8F/embedded-phy/20211206_142353.png" width="500" height><h2 id="简化PHY片的原理框图"><a href="#简化PHY片的原理框图" class="headerlink" title="简化PHY片的原理框图"></a>简化PHY片的原理框图</h2><img alt="20211206_142413.png" src="/2021/12/03/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%B5%8C%E5%85%A5%E5%BC%8F/embedded-phy/20211206_142413.png" width="500" height><h2 id="寄存器读写"><a href="#寄存器读写" class="headerlink" title="寄存器读写"></a>寄存器读写</h2><p>未验证</p><img alt="20211206_142446.png" src="/2021/12/03/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%B5%8C%E5%85%A5%E5%BC%8F/embedded-phy/20211206_142446.png" width="500" height><img alt="20211206_142525.png" src="/2021/12/03/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%B5%8C%E5%85%A5%E5%BC%8F/embedded-phy/20211206_142525.png" width="500" height><h2 id="Phy驱动"><a href="#Phy驱动" class="headerlink" title="Phy驱动"></a>Phy驱动</h2><h3 id="RTL8211F-CG，RTL8211E"><a href="#RTL8211F-CG，RTL8211E" class="headerlink" title="RTL8211F-CG，RTL8211E"></a>RTL8211F-CG，RTL8211E</h3><p>注意 pcb 布线要求较高</p><p>TX，RX需要加延迟</p><p>遇到过一个怪异的事情，就是在时钟增加测试点的时候，因为被挡着，所以用了一小段引线，突然就调通了，去掉引线就 ping 不通网络。</p><h2 id="Q-amp-A"><a href="#Q-amp-A" class="headerlink" title="Q&amp;A"></a>Q&amp;A</h2><h3 id="只能收包-却发不出去包-环回测试收不到"><a href="#只能收包-却发不出去包-环回测试收不到" class="headerlink" title="只能收包,却发不出去包,环回测试收不到"></a>只能收包,却发不出去包,环回测试收不到</h3><p>u-boot 和 linux下,都只能收包,却发不出去包,环回测试也收不到自己发的东西<br>时系统时钟问题，之前不能发包，是因为mcu给的TX时钟不对，而这个时钟是根据系统时钟分频来的</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;驱动调试&lt;br&gt;首先确认 Configuration Strapping Pins 这个是配置硬件接口方式的地方。&lt;br&gt;是芯片上电/复位后的默认配置过程，使得PHY芯片在上电/复位结束后能进入期望的工作状态，比如芯片的PHY地址，传输线路速率，是否速率自动协商，双工模式等。&lt;/p&gt;
&lt;p&gt;ping 命令数据流向是 cpu 处理命令，通过 CPU 的 GMAC 口发出去，可以看 PHY 端 RGMII 口 MIB 的 ifOutOctets 计数器（发出多少字节），然后在通过 PHY 的 RGMII 接口交给 PHY 通过 PHY 的 UTP 口发出去，可以看 UTP 口MIB 的 ifOutOctets 计数器（发出多少字节）。&lt;/p&gt;
&lt;p&gt;需要注意的地方就是当 ping 不通时，先确认 cpu 端的 GMAC 配置要和 phy 端的 mac 口配置保持一致，比如：都是1000M或者都是100M，然后去掉中间环节，直连电脑和板子，避免因为路由的原因导致不通。&lt;/p&gt;
&lt;img alt=&quot;20211206_141918.png&quot; src=&quot;/2021/12/03/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%B5%8C%E5%85%A5%E5%BC%8F/embedded-phy/20211206_141918.png&quot; width=&quot;500&quot; height&gt;</summary>
    
    
    
    <category term="嵌入式" scheme="http://zhengjun.top/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
    
  </entry>
  
  <entry>
    <title>tool-wireshark</title>
    <link href="http://zhengjun.top/2021/12/02/%E5%B7%A5%E5%85%B7%E7%9B%B8%E5%85%B3/tool-wireshark/"/>
    <id>http://zhengjun.top/2021/12/02/%E5%B7%A5%E5%85%B7%E7%9B%B8%E5%85%B3/tool-wireshark/</id>
    <published>2021-12-02T03:34:15.000Z</published>
    <updated>2021-12-02T03:35:51.865Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">// 只查看指定 mac 地址的包</span><br><span class="line">eth.src == 00:00:38:64:82:11</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// 只查看指定 mac 地址的包&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;eth.src =</summary>
      
    
    
    
    <category term="工具相关" scheme="http://zhengjun.top/categories/%E5%B7%A5%E5%85%B7%E7%9B%B8%E5%85%B3/"/>
    
    
  </entry>
  
  <entry>
    <title>linux-makefile</title>
    <link href="http://zhengjun.top/2021/11/16/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/linux/linux-makefile/"/>
    <id>http://zhengjun.top/2021/11/16/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/linux/linux-makefile/</id>
    <published>2021-11-16T02:32:28.000Z</published>
    <updated>2021-11-16T03:21:33.718Z</updated>
    
    <content type="html"><![CDATA[<h2 id="打印变量"><a href="#打印变量" class="headerlink" title="打印变量"></a>打印变量</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ROOTDIR=$(shell pwd)</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">$</span><span class="bash">(info <span class="string">&quot;test ====&quot;</span>)</span></span><br><span class="line"><span class="meta">$</span><span class="bash">(warning rootdir is $(ROOTDIR))</span></span><br></pre></td></tr></table></figure><h2 id="library-include"><a href="#library-include" class="headerlink" title="library include"></a>library include</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">-L ：此选项是指定链接库的文件夹地址</span><br><span class="line">-l（小写的L）：-lssl 即是寻找/usr/local/openssl/lib目录下的 libssl.a 这个库，编译器会自动寻找 libssl.a或者libssl.so</span><br><span class="line">-I(大写的i)：指定头文件的文件夹地址</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;打印变量&quot;&gt;&lt;a href=&quot;#打印变量&quot; class=&quot;headerlink&quot; title=&quot;打印变量&quot;&gt;&lt;/a&gt;打印变量&lt;/h2&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;</summary>
      
    
    
    
    <category term="系统" scheme="http://zhengjun.top/categories/%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="linux" scheme="http://zhengjun.top/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>vue-学习笔记1-环境搭建</title>
    <link href="http://zhengjun.top/2021/11/10/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/VUE/vue-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B01-%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>http://zhengjun.top/2021/11/10/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/VUE/vue-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B01-%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</id>
    <published>2021-11-10T08:45:24.000Z</published>
    <updated>2021-11-11T00:18:08.571Z</updated>
    
    <content type="html"><![CDATA[<p>MVVM<br>MVVM: Model-View-ViewModel，数据驱动视图</p><p>使用 vscode 开发<br>npm（node package manager）：nodejs的包管理器，用于node插件管理（包括安装、卸载、管理依赖等）<br>安装nodejs</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;MVVM&lt;br&gt;MVVM: Model-View-ViewModel，数据驱动视图&lt;/p&gt;
&lt;p&gt;使用 vscode 开发&lt;br&gt;npm（node package manager）：nodejs的包管理器，用于node插件管理（包括安装、卸载、管理依赖等）&lt;br&gt;安装nod</summary>
      
    
    
    
    <category term="前端" scheme="http://zhengjun.top/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="vue" scheme="http://zhengjun.top/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>linux-shell脚本</title>
    <link href="http://zhengjun.top/2021/10/26/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/linux/linux-shell%E8%84%9A%E6%9C%AC/"/>
    <id>http://zhengjun.top/2021/10/26/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/linux/linux-shell%E8%84%9A%E6%9C%AC/</id>
    <published>2021-10-26T02:15:02.000Z</published>
    <updated>2021-11-19T07:10:05.690Z</updated>
    
    <content type="html"><![CDATA[<h2 id="if-判断"><a href="#if-判断" class="headerlink" title="if 判断"></a>if 判断</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 这里的-f参数判断 /data/filename 是否存在</span></span><br><span class="line">if [ ! -f &quot;/data/filename&quot; ]; then</span><br><span class="line">    echo &quot;文件不存在&quot;</span><br><span class="line">else</span><br><span class="line">    rm -f /data/filename</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">–b 当file存在并且是块文件时返回真</span><br><span class="line">-c 当file存在并且是字符文件时返回真</span><br><span class="line">-d 当pathname存在并且是一个目录时返回真</span><br><span class="line">-e 当pathname指定的文件或目录存在时返回真</span><br><span class="line">-f 当file存在并且是正规文件时返回真</span><br><span class="line">-g 当由pathname指定的文件或目录存在并且设置了SGID位时返回为真</span><br><span class="line">-h 当file存在并且是符号链接文件时返回真，该选项在一些老系统上无效</span><br><span class="line">-k 当由pathname指定的文件或目录存在并且设置了“粘滞”位时返回真</span><br><span class="line">-p 当file存在并且是命令管道时返回为真</span><br><span class="line">-r 当由pathname指定的文件或目录存在并且可读时返回为真</span><br><span class="line">-s 当file存在文件大小大于0时返回真</span><br><span class="line">-u 当由pathname指定的文件或目录存在并且设置了SUID位时返回真</span><br><span class="line">-w 当由pathname指定的文件或目录存在并且可执行时返回真。一个目录为了它的内容被访问必然是可执行的。</span><br><span class="line">-o 当由pathname指定的文件或目录存在并且被子当前进程的有效用户ID所指定的用户拥有时返回真。</span><br><span class="line">UNIX Shell 里面比较字符写法：</span><br><span class="line">-eq   等于</span><br><span class="line">-ne    不等于</span><br><span class="line">-gt    大于</span><br><span class="line">-lt    小于</span><br><span class="line">-le    小于等于</span><br><span class="line">-ge   大于等于</span><br><span class="line">-z    空串</span><br><span class="line">=    两个字符相等</span><br><span class="line">!=    两个字符不等</span><br><span class="line">-n    非空串</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;if-判断&quot;&gt;&lt;a href=&quot;#if-判断&quot; class=&quot;headerlink&quot; title=&quot;if 判断&quot;&gt;&lt;/a&gt;if 判断&lt;/h2&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;</summary>
      
    
    
    
    <category term="系统" scheme="http://zhengjun.top/categories/%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="linux" scheme="http://zhengjun.top/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>qt-Network</title>
    <link href="http://zhengjun.top/2021/10/14/%E5%BC%80%E6%BA%90%E5%BA%93/Qt/qt-Network/"/>
    <id>http://zhengjun.top/2021/10/14/%E5%BC%80%E6%BA%90%E5%BA%93/Qt/qt-Network/</id>
    <published>2021-10-14T07:59:25.000Z</published>
    <updated>2021-12-07T13:31:01.438Z</updated>
    
    <content type="html"><![CDATA[<h2 id="tcpclient"><a href="#tcpclient" class="headerlink" title="tcpclient"></a>tcpclient</h2><span id="more"></span><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">mp_socket_video = QSharedPointer&lt;QTcpSocket&gt;(<span class="keyword">new</span> <span class="built_in">QTcpSocket</span>(<span class="keyword">this</span>));</span><br><span class="line"><span class="built_in">connect</span>(mp_socket_video.<span class="built_in">data</span>(), <span class="built_in">SIGNAL</span>(<span class="built_in">readyRead</span>()), <span class="keyword">this</span>, <span class="built_in">SLOT</span>(<span class="built_in">readVideo</span>()));</span><br><span class="line"><span class="built_in">connect</span>(mp_socket_video.<span class="built_in">data</span>(), <span class="built_in">SIGNAL</span>(<span class="built_in">error</span>(QAbstractSocket::SocketError)),</span><br><span class="line">    <span class="keyword">this</span>, <span class="built_in">SLOT</span>(<span class="built_in">videoSockdisplayError</span>(QAbstractSocket::SocketError)));</span><br><span class="line"><span class="built_in">connect</span>(mp_socket_video.<span class="built_in">data</span>(),<span class="built_in">SIGNAL</span>(<span class="built_in">connected</span>()),<span class="keyword">this</span>,<span class="built_in">SLOT</span>(<span class="built_in">videoSockConnected</span>()));</span><br><span class="line"><span class="built_in">connect</span>(mp_socket_video.<span class="built_in">data</span>(),<span class="built_in">SIGNAL</span>(<span class="built_in">disconnected</span>()),<span class="keyword">this</span>,<span class="built_in">SLOT</span>(<span class="built_in">videoSockDisconnected</span>()));</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">H264Video::videoSockConnected</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">LOGFMTI</span>(<span class="string">&quot;videos socket connected... send userID&quot;</span>);</span><br><span class="line">vector&lt;<span class="keyword">unsigned</span> <span class="keyword">char</span>&gt; cmdBuf;</span><br><span class="line">m_protocol.<span class="built_in">sendUserID</span>(g_initParam.userID, cmdBuf);</span><br><span class="line">mp_socket_video-&gt;<span class="built_in">write</span>((<span class="keyword">const</span> <span class="keyword">char</span> *)cmdBuf.<span class="built_in">data</span>(),cmdBuf.<span class="built_in">size</span>());</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">H264Video::videoSockDisconnected</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">LOGFMTI</span>(<span class="string">&quot;videos socket disconnected...&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">H264Video::readVideo</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// 协议头是11bytes</span></span><br><span class="line">    <span class="keyword">if</span> (mp_socket_video-&gt;<span class="built_in">bytesAvailable</span>() &lt; <span class="number">11</span>)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    QByteArray datas = mp_socket_video-&gt;<span class="built_in">read</span>(<span class="number">11</span>);</span><br><span class="line">    <span class="keyword">if</span> (datas.<span class="built_in">at</span>(<span class="number">0</span>) != (<span class="keyword">char</span>)<span class="number">0xa5</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">assert</span>(<span class="literal">false</span>);</span><br><span class="line">        <span class="comment">// 协议头未找到</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 收到一个完整的 nalu 分组</span></span><br><span class="line">    datas = mp_socket_video-&gt;<span class="built_in">read</span>(fine_len);</span><br><span class="line">    datas = mp_socket_video-&gt;<span class="built_in">readAll</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">H264Video::videoSockdisplayError</span><span class="params">(QAbstractSocket::SocketError socketError)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in"><span class="keyword">switch</span></span> (socketError) &#123;</span><br><span class="line"><span class="keyword">case</span> QAbstractSocket::RemoteHostClosedError:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> QAbstractSocket::HostNotFoundError:</span><br><span class="line">QMessageBox::<span class="built_in">information</span>(<span class="keyword">this</span>, <span class="built_in">tr</span>(<span class="string">&quot;Fortune Client&quot;</span>),</span><br><span class="line"><span class="built_in">tr</span>(<span class="string">&quot;The host was not found. Please check the &quot;</span></span><br><span class="line"><span class="string">&quot;host name and port settings.&quot;</span>));</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> QAbstractSocket::ConnectionRefusedError:</span><br><span class="line">QMessageBox::<span class="built_in">information</span>(<span class="keyword">this</span>, <span class="built_in">tr</span>(<span class="string">&quot;Fortune Client&quot;</span>),</span><br><span class="line"><span class="built_in">tr</span>(<span class="string">&quot;The connection was refused by the peer. &quot;</span></span><br><span class="line"><span class="string">&quot;Make sure the fortune server is running, &quot;</span></span><br><span class="line"><span class="string">&quot;and check that the host name and port &quot;</span></span><br><span class="line"><span class="string">&quot;settings are correct.&quot;</span>));</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">QMessageBox::<span class="built_in">information</span>(<span class="keyword">this</span>, <span class="built_in">tr</span>(<span class="string">&quot;Fortune Client&quot;</span>),</span><br><span class="line"><span class="built_in">tr</span>(<span class="string">&quot;The following error occurred: %1.&quot;</span>)</span><br><span class="line">.<span class="built_in">arg</span>(mp_socket_video-&gt;<span class="built_in">errorString</span>()));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;tcpclient&quot;&gt;&lt;a href=&quot;#tcpclient&quot; class=&quot;headerlink&quot; title=&quot;tcpclient&quot;&gt;&lt;/a&gt;tcpclient&lt;/h2&gt;</summary>
    
    
    
    <category term="开源库" scheme="http://zhengjun.top/categories/%E5%BC%80%E6%BA%90%E5%BA%93/"/>
    
    <category term="c++" scheme="http://zhengjun.top/categories/%E5%BC%80%E6%BA%90%E5%BA%93/c/"/>
    
    
    <category term="Qt" scheme="http://zhengjun.top/tags/Qt/"/>
    
  </entry>
  
  <entry>
    <title>嵌入式-uboot</title>
    <link href="http://zhengjun.top/2021/10/14/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E5%B5%8C%E5%85%A5%E5%BC%8F-uboot/"/>
    <id>http://zhengjun.top/2021/10/14/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E5%B5%8C%E5%85%A5%E5%BC%8F-uboot/</id>
    <published>2021-10-14T05:03:32.000Z</published>
    <updated>2021-12-07T13:31:20.547Z</updated>
    
    <content type="html"><![CDATA[<p>启动的时候 按任意键 进入u-boot 交互模式<br>查看系统环境变量<br>printenv</p><h2 id="在线更新-u-boot"><a href="#在线更新-u-boot" class="headerlink" title="在线更新 u-boot"></a>在线更新 u-boot</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"># 设置server ip</span><br><span class="line">setenv serverip <span class="number">192.168</span><span class="number">.0</span><span class="number">.147</span></span><br><span class="line"># 通过tftp载入镜像</span><br><span class="line"><span class="meta"># tftp <span class="meta-string">&lt;内存地址&gt;</span> <span class="meta-string">&lt;文件名&gt;</span></span></span><br><span class="line">tftp <span class="number">82000000</span> u-boot_SK4102_hi3531_RTL8363.bin</span><br><span class="line">tftp <span class="number">82000000</span> u-boot_KMD4101_hi3531_1000m.bin</span><br><span class="line"># 先在ram中调试运行，OK了在重新ftp下载，写入flash</span><br><span class="line">go <span class="number">0x82000000</span></span><br><span class="line"></span><br><span class="line"># 测试 ok 后，写入 nand，注意要重新载入一次，因为运行后有变化</span><br><span class="line">tftp <span class="number">82000000</span> u-boot_KMD4101_hi3531_1000m.bin</span><br><span class="line">nand erase <span class="number">0</span> <span class="number">200000</span></span><br><span class="line">nand write <span class="number">82000000</span> <span class="number">0</span> <span class="number">200000</span></span><br></pre></td></tr></table></figure><span id="more"></span><h2 id="添加文件"><a href="#添加文件" class="headerlink" title="添加文件"></a>添加文件</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">以RTL8363 ASIC驱动为例</span><br><span class="line">头文件添加到 \include\rtl8363\</span><br><span class="line">源文件添加到 \drivers\net\stmmac\</span><br><span class="line">编辑 \drivers\net\stmmac\Makefile 添加下面驱动目标文件</span><br><span class="line"></span><br><span class="line">COBJS-$(CONFIG_GODNET) += rtl8363.o rtk_switch.o port.o rtl8367c_asicdrv.o \</span><br><span class="line">rtl8367c_asicdrv_port.o rtl8367c_asicdrv_phy.o \</span><br><span class="line">rtl8367c_asicdrv_green.o smi_8363.o rtl8367c_asicdrv_misc.o \</span><br><span class="line">rtl8367c_asicdrv_mirror.o rtl8367c_asicdrv_portIsolation.o \</span><br><span class="line">rtl8367c_asicdrv_inbwctrl.o rtl8367c_asicdrv_rma.o rtl8367c_asicdrv_scheduling.o \</span><br><span class="line">rtl8367c_asicdrv_lut.o rtl8367c_asicdrv_eee.o</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;启动的时候 按任意键 进入u-boot 交互模式&lt;br&gt;查看系统环境变量&lt;br&gt;printenv&lt;/p&gt;
&lt;h2 id=&quot;在线更新-u-boot&quot;&gt;&lt;a href=&quot;#在线更新-u-boot&quot; class=&quot;headerlink&quot; title=&quot;在线更新 u-boot&quot;&gt;&lt;/a&gt;在线更新 u-boot&lt;/h2&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# 设置server ip&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;setenv serverip &lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.0&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.147&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 通过tftp载入镜像&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;# tftp &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;内存地址&amp;gt;&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;文件名&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tftp &lt;span class=&quot;number&quot;&gt;82000000&lt;/span&gt; u-boot_SK4102_hi3531_RTL8363.bin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tftp &lt;span class=&quot;number&quot;&gt;82000000&lt;/span&gt; u-boot_KMD4101_hi3531_1000m.bin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 先在ram中调试运行，OK了在重新ftp下载，写入flash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;go &lt;span class=&quot;number&quot;&gt;0x82000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 测试 ok 后，写入 nand，注意要重新载入一次，因为运行后有变化&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tftp &lt;span class=&quot;number&quot;&gt;82000000&lt;/span&gt; u-boot_KMD4101_hi3531_1000m.bin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;nand erase &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;200000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;nand write &lt;span class=&quot;number&quot;&gt;82000000&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;200000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="嵌入式" scheme="http://zhengjun.top/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
    
  </entry>
  
  <entry>
    <title>嵌入式-Linux网卡驱动RTL8363</title>
    <link href="http://zhengjun.top/2021/10/13/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E5%B5%8C%E5%85%A5%E5%BC%8F-Linux%E7%BD%91%E5%8D%A1%E9%A9%B1%E5%8A%A8RTL8363/"/>
    <id>http://zhengjun.top/2021/10/13/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E5%B5%8C%E5%85%A5%E5%BC%8F-Linux%E7%BD%91%E5%8D%A1%E9%A9%B1%E5%8A%A8RTL8363/</id>
    <published>2021-10-13T02:33:29.000Z</published>
    <updated>2021-11-19T05:03:17.558Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
      
    
    
    
    <category term="嵌入式" scheme="http://zhengjun.top/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
    
  </entry>
  
  <entry>
    <title>cpp-logging</title>
    <link href="http://zhengjun.top/2021/09/24/%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/CPP/cpp-logging/"/>
    <id>http://zhengjun.top/2021/09/24/%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/CPP/cpp-logging/</id>
    <published>2021-09-24T02:34:40.000Z</published>
    <updated>2021-09-26T01:44:32.210Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">std::shared_ptr&lt;spdlog::logger&gt; m_logger;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// Create a daily logger - a new file is created every day on 2:30am, save 60 days log</span></span><br><span class="line">    <span class="keyword">auto</span> logger = spdlog::<span class="built_in">daily_logger_mt</span>(<span class="string">&quot;daily_logger&quot;</span>, <span class="string">&quot;logs/daily&quot;</span>, <span class="number">23</span>, <span class="number">59</span>, <span class="literal">false</span>, <span class="number">60</span>);</span><br><span class="line">    g_logger-&gt;<span class="built_in">set_level</span>(spdlog::level::<span class="built_in">level_enum</span>(logLevel));</span><br><span class="line">    logger-&gt;<span class="built_in">flush_on</span>(spdlog::level::info);</span><br><span class="line">    logger-&gt;<span class="built_in">info</span>(<span class="string">&quot;infor message&quot;</span>);</span><br><span class="line">    logger-&gt;<span class="built_in">error</span>(<span class="string">&quot;Some error message with arg: &#123;&#125;&quot;</span>, <span class="number">1</span>);</span><br><span class="line">    logger-&gt;<span class="built_in">critical</span>(<span class="string">&quot;Support for int: &#123;0:d&#125;;  hex: &#123;0:x&#125;;  oct: &#123;0:o&#125;; bin: &#123;0:b&#125;&quot;</span>, <span class="number">42</span>);</span><br><span class="line"></span><br><span class="line">    spdlog::<span class="built_in">info</span>(<span class="string">&quot;Hello, &#123;&#125;!&quot;</span>, <span class="string">&quot;World&quot;</span>);</span><br><span class="line">    logger-&gt;<span class="built_in">info</span>(<span class="string">&quot;Hello &#123;&#125; &#123;&#125; !!&quot;</span>, <span class="string">&quot;param1&quot;</span>, <span class="number">123.4</span>);</span><br><span class="line"></span><br><span class="line">    spdlog::<span class="built_in">warn</span>(<span class="string">&quot;Easy padding in numbers like &#123;:08d&#125;&quot;</span>, <span class="number">12</span>);</span><br><span class="line">    spdlog::<span class="built_in">critical</span>(<span class="string">&quot;Support for int: &#123;0:d&#125;;  hex: &#123;0:x&#125;;  oct: &#123;0:o&#125;; bin: &#123;0:b&#125;&quot;</span>, <span class="number">42</span>);</span><br><span class="line">    spdlog::<span class="built_in">info</span>(<span class="string">&quot;Support for floats &#123;:03.2f&#125;&quot;</span>, <span class="number">1.23456</span>);</span><br><span class="line">    spdlog::<span class="built_in">info</span>(<span class="string">&quot;Positional args are &#123;1&#125; &#123;0&#125;..&quot;</span>, <span class="string">&quot;too&quot;</span>, <span class="string">&quot;supported&quot;</span>);</span><br><span class="line">    spdlog::<span class="built_in">info</span>(<span class="string">&quot;&#123;:&lt;30&#125;&quot;</span>, <span class="string">&quot;left aligned&quot;</span>);</span><br><span class="line"></span><br><span class="line">    logger-&gt;<span class="built_in">flush</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in"><span class="keyword">catch</span></span> (<span class="keyword">const</span> spdlog::spdlog_ex&amp; ex)</span><br><span class="line">&#123;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;Log initialization failed: &quot;</span> &lt;&lt; ex.<span class="built_in">what</span>() &lt;&lt; std::endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果存在会返回实例，否则返回空</span></span><br><span class="line">m_logger = spdlog::<span class="built_in">get</span>(<span class="string">&quot;daily_logger&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (m_logger == <span class="literal">nullptr</span>)</span><br><span class="line">&#123;</span><br><span class="line">    m_logger = spdlog::<span class="built_in">daily_logger_mt</span>(<span class="string">&quot;daily_logger&quot;</span>, <span class="string">&quot;logs/daily&quot;</span>, <span class="number">23</span>, <span class="number">59</span>, <span class="literal">false</span>, <span class="number">60</span>);</span><br><span class="line">    g_logger-&gt;<span class="built_in">set_level</span>(spdlog::level::<span class="built_in">level_enum</span>(logLevel));</span><br><span class="line">    g_logger-&gt;<span class="built_in">flush_on</span>(spdlog::level::<span class="built_in">level_enum</span>(logLevel));</span><br><span class="line">    m_logger-&gt;<span class="built_in">info</span>(<span class="string">&quot;m_logger is started.&quot;</span>);</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Release and close all loggers</span></span><br><span class="line">spdlog::<span class="built_in">drop_all</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 或者单独drop某个logger</span></span><br><span class="line">spd::<span class="built_in">drop</span>(<span class="string">&quot;console&quot;</span>);</span><br><span class="line">spd::<span class="built_in">drop</span>(<span class="string">&quot;basic_logger&quot;</span>);</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;std::shared_ptr&amp;lt;spdlog::logger&amp;gt; m_logger;&lt;/span&gt;&lt;br&gt;</summary>
      
    
    
    
    <category term="c++" scheme="http://zhengjun.top/categories/c/"/>
    
    
  </entry>
  
  <entry>
    <title>cpp-日志系统</title>
    <link href="http://zhengjun.top/2021/09/23/%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/CPP/cpp-%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F/"/>
    <id>http://zhengjun.top/2021/09/23/%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/CPP/cpp-%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F/</id>
    <published>2021-09-23T07:54:33.000Z</published>
    <updated>2021-09-23T08:11:47.469Z</updated>
    
    <content type="html"><![CDATA[<h2 id="跨平台"><a href="#跨平台" class="headerlink" title="跨平台"></a>跨平台</h2><p><a href="https://github.com/gabime/spdlog">spdlog</a></p><p>包含头文件即可</p><h2 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h2><h2 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h2><p><a href="https://github.com/PlatformLab/NanoLog">NanoLog</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;跨平台&quot;&gt;&lt;a href=&quot;#跨平台&quot; class=&quot;headerlink&quot; title=&quot;跨平台&quot;&gt;&lt;/a&gt;跨平台&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/gabime/spdlog&quot;&gt;spdlog&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;包含头文件</summary>
      
    
    
    
    <category term="c++" scheme="http://zhengjun.top/categories/c/"/>
    
    
  </entry>
  
  <entry>
    <title>vs2019-项目模板</title>
    <link href="http://zhengjun.top/2021/09/22/%E5%B7%A5%E5%85%B7%E7%9B%B8%E5%85%B3/visual%20studio/vs2019-%E9%A1%B9%E7%9B%AE%E6%A8%A1%E6%9D%BF/"/>
    <id>http://zhengjun.top/2021/09/22/%E5%B7%A5%E5%85%B7%E7%9B%B8%E5%85%B3/visual%20studio/vs2019-%E9%A1%B9%E7%9B%AE%E6%A8%A1%E6%9D%BF/</id>
    <published>2021-09-22T08:51:40.000Z</published>
    <updated>2021-09-22T08:57:15.589Z</updated>
    
    <content type="html"><![CDATA[<p>模板路径</p><p>%USERPROFILE%\Documents\Visual Studio 2019\Templates\ProjectTemplates</p><p>%USERPROFILE%\Documents\Visual Studio 2019\Templates\ItemTemplates</p><p><a href="https://docs.microsoft.com/en-us/visualstudio/ide/creating-project-and-item-templates?view=vs-2019">Project and item templates</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;模板路径&lt;/p&gt;
&lt;p&gt;%USERPROFILE%\Documents\Visual Studio 2019\Templates\ProjectTemplates&lt;/p&gt;
&lt;p&gt;%USERPROFILE%\Documents\Visual Studio 2019\Templ</summary>
      
    
    
    
    <category term="工具相关" scheme="http://zhengjun.top/categories/%E5%B7%A5%E5%85%B7%E7%9B%B8%E5%85%B3/"/>
    
    
  </entry>
  
  <entry>
    <title>python-爬虫</title>
    <link href="http://zhengjun.top/2021/09/09/%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/python/python-%E7%88%AC%E8%99%AB/"/>
    <id>http://zhengjun.top/2021/09/09/%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/python/python-%E7%88%AC%E8%99%AB/</id>
    <published>2021-09-09T13:22:15.000Z</published>
    <updated>2021-09-09T13:24:01.358Z</updated>
    
    <content type="html"><![CDATA[<p>BeautifulSoup + requests 简单网页</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;BeautifulSoup + requests 简单网页&lt;/p&gt;
</summary>
      
    
    
    
    <category term="Language" scheme="http://zhengjun.top/categories/Language/"/>
    
    
    <category term="Python" scheme="http://zhengjun.top/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>csharp-隐藏主窗口</title>
    <link href="http://zhengjun.top/2021/09/07/%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/csharp/csharp-%E9%9A%90%E8%97%8F%E4%B8%BB%E7%AA%97%E5%8F%A3/"/>
    <id>http://zhengjun.top/2021/09/07/%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/csharp/csharp-%E9%9A%90%E8%97%8F%E4%B8%BB%E7%AA%97%E5%8F%A3/</id>
    <published>2021-09-07T06:04:05.000Z</published>
    <updated>2021-09-07T06:05:21.924Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">private bool windowCreate = true ;</span><br><span class="line">...</span><br><span class="line">protected override void OnActivated(EventArgs e) </span><br><span class="line">&#123; </span><br><span class="line">    if (windowCreate) </span><br><span class="line">    &#123; </span><br><span class="line">        base .Visible  =   false ;</span><br><span class="line">        windowCreate  =   false ;</span><br><span class="line">    &#125; </span><br><span class="line">    base .OnActivated(e); </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;private bool windowCreate = true ;&lt;/span&gt;&lt;br&gt;&lt;span c</summary>
      
    
    
    
    <category term="Language" scheme="http://zhengjun.top/categories/Language/"/>
    
    
    <category term="csharp" scheme="http://zhengjun.top/tags/csharp/"/>
    
  </entry>
  
  <entry>
    <title>qt-signal-slot</title>
    <link href="http://zhengjun.top/2021/09/03/%E5%BC%80%E6%BA%90%E5%BA%93/Qt/qt-signal-slot/"/>
    <id>http://zhengjun.top/2021/09/03/%E5%BC%80%E6%BA%90%E5%BA%93/Qt/qt-signal-slot/</id>
    <published>2021-09-03T00:10:27.000Z</published>
    <updated>2021-09-03T00:30:27.674Z</updated>
    
    <content type="html"><![CDATA[<p>使用 Qt 提供的集合类传递数据，例如：QVector</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">qRegisterMetaType&lt;QVector&lt;uchar&gt; &gt;(<span class="string">&quot;QVector&lt;uchar&gt;&quot;</span>);</span><br><span class="line"></span><br><span class="line">signals:</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">signal_decode_one_frame</span><span class="params">(QVector&lt;uchar&gt;)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> slots:</span><br><span class="line">    <span class="comment">// 一帧图像信号响应显示槽;</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">on_slot_decode_one_frame</span><span class="params">(QVector&lt;uchar&gt; image)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> bRet = <span class="built_in">connect</span>(<span class="keyword">this</span>,<span class="built_in">SIGNAL</span>(<span class="built_in">signal_decode_one_frame</span>(QVector&lt;uchar&gt;)),<span class="keyword">this</span>,<span class="built_in">SLOT</span>(<span class="built_in">on_slot_decode_one_frame</span>(QVector&lt;uchar&gt;)),Qt::QueuedConnection);</span><br><span class="line"><span class="built_in">assert</span>(bRet);</span><br><span class="line">    </span><br><span class="line">QVector&lt;uchar&gt; imgbuf;</span><br><span class="line">imgbuf.<span class="built_in">reserve</span>(bufsize);</span><br><span class="line"></span><br><span class="line"><span class="built_in">memcpy</span>(imgbuf.<span class="built_in">data</span>(), (uchar *)m_auto_array_rgb.<span class="built_in">data</span>(), bufsize);</span><br><span class="line"><span class="function">emit <span class="title">signal_decode_one_frame</span><span class="params">(imgbuf)</span></span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;使用 Qt 提供的集合类传递数据，例如：QVector&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;qRegisterMetaType&amp;lt;QV</summary>
      
    
    
    
    <category term="开源库" scheme="http://zhengjun.top/categories/%E5%BC%80%E6%BA%90%E5%BA%93/"/>
    
    <category term="c++" scheme="http://zhengjun.top/categories/%E5%BC%80%E6%BA%90%E5%BA%93/c/"/>
    
    
    <category term="Qt" scheme="http://zhengjun.top/tags/Qt/"/>
    
  </entry>
  
  <entry>
    <title>qt-QDialog</title>
    <link href="http://zhengjun.top/2021/09/02/%E5%BC%80%E6%BA%90%E5%BA%93/Qt/qt-QDialog/"/>
    <id>http://zhengjun.top/2021/09/02/%E5%BC%80%E6%BA%90%E5%BA%93/Qt/qt-QDialog/</id>
    <published>2021-09-02T05:11:11.000Z</published>
    <updated>2021-09-02T05:42:16.734Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">CInfoWnd* wnd = <span class="keyword">new</span> <span class="built_in">CInfoWnd</span>( main_wnd );</span><br><span class="line">wnd-&gt;<span class="built_in">setAttribute</span>( Qt::WA_DeleteOnClose, <span class="literal">true</span> );</span><br><span class="line">wnd-&gt;<span class="built_in">show</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">delete</span> wnd;</span><br><span class="line"><span class="comment">//or</span></span><br><span class="line">wnd.<span class="built_in">deleteLater</span>();</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;CInfoWnd* wnd = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span cla</summary>
      
    
    
    
    <category term="开源库" scheme="http://zhengjun.top/categories/%E5%BC%80%E6%BA%90%E5%BA%93/"/>
    
    <category term="c++" scheme="http://zhengjun.top/categories/%E5%BC%80%E6%BA%90%E5%BA%93/c/"/>
    
    
    <category term="Qt" scheme="http://zhengjun.top/tags/Qt/"/>
    
  </entry>
  
</feed>
